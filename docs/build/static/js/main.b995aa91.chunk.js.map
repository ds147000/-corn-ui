{"version":3,"sources":["components/introduce/index.tsx","components/start/index.tsx","components/customize/index.tsx","views/ActionSheet/demo/BASIS.tsx","views/ActionSheet/demo/VISIBLE.tsx","views/ActionSheet/demo/ITEM.tsx","views/ActionSheet/demo/TITLE.tsx","views/ActionSheet/demo/TITLEALIGN.tsx","views/ActionSheet/demo/CLOSE.tsx","views/ActionSheet/demo/BUTTON.tsx","views/ActionSheet/demo/BUTTONTEXT.tsx","views/ActionSheet/demo/MASK.tsx","views/ActionSheet/index.tsx","router/components.tsx","router/other.tsx","router/start.tsx","components/layout/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","views/Button/demo/TYEP.tsx","views/Button/demo/SIZE.tsx","views/Button/demo/BLOCK.tsx","views/Button/demo/CLICK.tsx","views/Button/demo/GHOST.tsx","views/Button/demo/ICON.tsx","views/Button/index.tsx","views/Toast/demo/BASIS.tsx","views/Toast/demo/QUEUE.tsx","views/Toast/demo/ICON.tsx","views/Toast/demo/IMG.tsx","views/Toast/demo/MASK.tsx","views/Toast/demo/SUCESS.tsx","views/Toast/index.tsx","views/Empty/demo/BASIS.tsx","views/Empty/demo/TEXT.tsx","views/Empty/demo/CHILDREN.tsx","views/Empty/demo/SRC.tsx","views/Empty/demo/SIZE.tsx","views/Empty/index.tsx","views/Modal/demo/API.tsx","views/Modal/demo/BASIS.tsx","views/Modal/demo/MULTI.tsx","views/Modal/demo/BUTTONCLICK.tsx","views/Modal/demo/CHILDREN.tsx","views/Modal/index.tsx","views/Drawer/demo/VISIBLE.tsx","views/Drawer/demo/POSITION.tsx","views/Drawer/demo/MASK.tsx","views/Drawer/demo/MASKCLOSABLE.tsx","views/Drawer/index.tsx","views/Icon/demo/BASIS.tsx","views/Icon/demo/CLASS.tsx","views/Icon/index.tsx","../../../node_modules/classnames/index.js","../../../node_modules/tslib/tslib.es6.js","../../../node_modules/@tarojs/components-react/src/components/view/index.tsx","../../../src/config/event.ts","../../../src/utils/sub.ts","../../../node_modules/@tarojs/components-react/src/components/text/index.tsx","../../../node_modules/@tarojs/components-react/src/components/image/index.tsx","../../../src/components/Toast/toast.h5.tsx","../../../src/components/Toast/container.h5.tsx","../../../src/components/Portal/host.tsx","../../../src/components/Portal/manager.tsx","../../../src/components/Toast/mannager.h5.tsx","../../../src/components/Toast/interface.tsx","../../../src/components/Drawer/index.tsx","../../../src/components/Icon/index.tsx","../../../src/components/ActionSheet/item.tsx","../../../src/components/ActionSheet/actionSheet.tsx","../../../src/components/ActionSheet/api.h5.tsx","../../../src/components/Modal/modal.tsx","../../../src/components/Modal/api.h5.tsx","../../../src/utils/index.ts","../../../src/components/Empty/index.tsx","../../../src/components/Button/index.tsx","components/Publish/index.tsx","components/Md/index.tsx","components/history/index.tsx"],"names":["Page","className","dangerouslySetInnerHTML","__html","list","Demo","useState","city","setCity","onClick","showActionSheet","then","res","tapIndex","catch","err","console","error","show","setShow","onSelect","title","visible","onClose","map","item","text","showSub","setShowSub","subTitle","showLeft","setShowLeft","showCenter","setShowCenter","showRight","setShowRight","titleAlign","closable","showCancel","showOk","onOk","cancelText","okText","maskClosable","Pgae","_BASIS","_setBASIS","_VISIBLE","_setVISIBLE","_ITEM","_setITEM","_TITLE","_setTITLE","_TITLEALIGN","_setTITLEALIGN","_CLOSE","_setCLOSE","_BUTTON","_setBUTTON","_BUTTONTEXT","_setBUTTONTEXT","_MASK","_setMASK","BASIS","orientation","shape","icon","CopyOutlined","size","CodeSandboxOutlined","VISIBLE","ITEM","TITLE","TITLEALIGN","CLOSE","BUTTON","BUTTONTEXT","MASK","Routes","path","component","require","default","type","sort","Header","Layout","Content","Footer","Sider","ShowCompsRoutes","CompsRoutes","push","Object","keys","key","item2","View","children","location","useLocation","history","useHistory","src","alt","theme","selectedKeys","pathname","mode","ItemGroup","Divider","StartRoutes","Item","OtherRoutes","App","Start","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","block","click","alert","disabled","ghost","name","_TYEP","_setTYEP","_SIZE","_setSIZE","_BLOCK","_setBLOCK","_CLICK","_setCLICK","_GHOST","_setGHOST","_ICON","_setICON","TYEP","SIZE","BLOCK","CLICK","GHOST","ICON","Toast","Date","toString","duration","image","mask","success","hide","_QUEUE","_setQUEUE","_IMG","_setIMG","_SUCESS","_setSUCESS","QUEUE","IMG","SUCESS","Empty","PRESENTED_IMAGE_SIMPLE","_TEXT","_setTEXT","_CHILDREN","_setCHILDREN","_SRC","_setSRC","TEXT","CHILDREN","SRC","showModal","log","content","button","style","onButtonClick","idnex","setIndex","index","_API","_setAPI","_MULTI","_setMULTI","_BUTTONCLICK","_setBUTTONCLICK","API","MULTI","BUTTONCLICK","onChange","width","height","backgroundColor","fontSize","textAlign","topShow","setTopShow","leftShow","setLeftShow","rightShow","setRightShow","centerShow","setCenterShow","onTopChange","onLeftChange","onRightChange","onCenterChange","position","boxShadow","_POSITION","_setPOSITION","_MASKCLOSABLE","_setMASKCLOSABLE","POSITION","MASKCLOSABLE","_CLASS","_setCLASS","CLASS","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","Array","isArray","inner","apply","prototype","call","join","module","exports","window","d","b","setPrototypeOf","__proto__","p","__extends","TypeError","String","__","this","constructor","create","assign","t","s","n","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","pop","__read","o","m","r","ar","__spreadArray","to","from","pack","l","slice","concat","state","hover","touch","startTime","React","props","hoverClass","onTouchStart","onTouchEnd","onTouchMove","hoverStartTime","hoverStayTime","other","cls","setState","setTimeout","onLongPress","timeoutEvent","getTime","clearTimeout","Component","PROTAL_ADD","PROTAL_REMOVE","TOAST_ADD","listens","ProtalSub","_this","callBack","get","selectable","restProps","observer","imgRef","isLoaded","imageOnLoad","bind","componentDidMount","lazyLoad","IntersectionObserver","entries","isIntersecting","rootMargin","observe","componentWillUnmount","disconnect","onLoad","defineProperty","enumerable","writable","target","onError","imgProps","reset","imgCls","toLowerCase","replace","ref","img","isHideAnimated","setIsHideAnimated","iconEl","useMemo","useEffect","timer","onAnimationEnd","event","Container","onShow","toastList","setToastList","useRef","isMask","onItemClose","useCallback","remove","Sub","Host","setList","ids","setChildren","removeAdd","removeRemove","initTime","id","status","HostManager","root","setInterval","ID","Proxy","set","prop","oldId","Protal","Reflect","ToastManager","_options","option","Drawer","_b","_c","_d","onHide","setStatus","_class","animationName","Icon","ActionSheetItem","align","suffix","ActionSheet","_e","_f","isShowFloor","titleClass","showHead","Dom","onSuccess","onCancel","Modal","_centent","floorClass","Boolean","confirm","cancel","errMsg","transformRem","val","Number","parseFloat","PRESENTED_IMAGE_DEFAULT","wrapperTop","wrapperBottom","_style","paddingTop","paddingBottom","isIcon","isChildren","ClassNames","rej","error_1","message"],"mappings":"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sBACM,IACR,+BACE,sBAAMA,UAAU,gBAAhB,wBAGJ,6BACE,+BACE,sBAAMA,UAAU,gBAAhB,yBAIN,+BACE,0CACA,wCACA,kFACA,6BACE,iCACE,sBAAMA,UAAU,gBAAhB,kBADF,WAIF,6BACE,+BACE,sBAAMA,UAAU,eAAhB,0BAIN,+BACE,4CACA,wCACA,8FACA,6BACE,iCACE,sBAAMA,UAAU,gBAAhB,kBADF,WAIF,6BACE,+BACE,sBAAMA,UAAU,eAAhB,0BAIN,+BACE,wCACA,wCACA,8FACA,6BACE,iCACE,sBAAMA,UAAU,gBAAhB,kBADF,WAIF,6BACE,+BACE,sBAAMA,UAAU,eAAhB,0BAIN,+BACE,4CACA,wCACA,4EACA,+BACE,+BACE,sBAAMA,UAAU,gBAAhB,sBACM,IACR,sDAEF,iDAEF,+BACE,wCACA,wCACA,4EACA,+BACE,+BACE,sBAAMA,UAAU,gBAAhB,sBACM,IACR,sDAEF,iDAEF,+BACE,8CACA,wCACA,8FACA,6BACE,iCACE,sBAAMA,UAAU,gBAAhB,kBADF,WAIF,6BACE,+BACE,sBAAMA,UAAU,eAAhB,+BAMV,mDACA,kCACE,gCACE,+BACE,0DACA,8CACA,8CACA,mDAGJ,kCACE,+BACE,yCACA,wCACA,oGACA,yCAEF,+BACE,sCACA,wCACA,kFACA,yCAEF,+BACE,wCACA,wCACA,gQAGA,+CAIN,uDACA,kCACE,gCACE,+BACE,8CACA,8CACA,8CACA,8CACA,yDAGJ,kCACE,+BACE,sCACA,wCACA,8CACA,6BACE,+BACE,sBAAMA,UAAU,gBAAhB,wBAGJ,iDAEF,+BACE,uCACA,wCACA,sEACA,+BACE,+BACE,sBAAMA,UAAU,gBAAhB,oBACM,IACR,+BACE,sBAAMA,UAAU,iBAAhB,sBACM,IACR,+BACE,sBAAMA,UAAU,gBAAhB,wBAGJ,6BACE,+BACE,sBAAMA,UAAU,gBAAhB,yBAIN,+BACE,wCACA,wCACA,0DACA,+BACE,+BACE,sBAAMA,UAAU,gBAAhB,sBACM,IACR,sDAEF,0BAEF,+BACE,yCACA,wCACA,0DACA,sCACA,qC,uHC12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ACE7K,UAAU,WACVC,wBAAyB,CACvBC,OAAO,4iEAkCjB,0BAEF,uBAngBF,oJAsgBE,6CACA,kCACE,gCACE,+BACE,8CACA,8CACA,8CACA,8CACA,yDAGJ,kCACE,+BACE,uCACA,wCACA,gEACA,6BACE,+BACE,sBAAMF,UAAU,gBAAhB,wBAGJ,0BAEF,+BACE,yCACA,wCACA,gEACA,6BACE,+BACE,sBAAMA,UAAU,gBAAhB,wBAGJ,0BAEF,+BACE,4CACA,wCACA,mHACA,6BACE,+BACE,sBAAMA,UAAU,gBAAhB,wBAGJ,iDAEF,+BACE,6CACA,wCACA,mHACA,6BACE,+BACE,sBAAMA,UAAU,gBAAhB,wBAGJ,iDAEF,+BACE,4CACA,wCACA,kFACA,6BACE,iCACE,sBAAMA,UAAU,gBAAhB,kBADF,WAIF,6BACE,+BACE,sBAAMA,UAAU,eAAhB,gCAMV,wCACA,kCACE,gCACE,+BACE,8CACA,8CACA,mDAGJ,kCACE,+BACE,wCACA,yQAIA,6BACE,iCACE,sBAAMA,UAAU,gBAAhB,kBADF,cAKJ,+BACE,yCACA,+HACA,6BACE,iCACE,sBAAMA,UAAU,gBAAhB,kBADF,cAKJ,+BACE,yCACA,wCACA,mEAEF,+BACE,wCACA,0DACA,6BACE,+BACE,sBAAMA,UAAU,gBAAhB,iCAMV,kDACA,kCACE,gCACE,+BACE,8CACA,8CACA,8CACA,8CACA,yDAGJ,kCACE,+BACE,yCACA,wCACA,0DACA,6BACE,iCACE,sBAAMA,UAAU,gBAAhB,kBADF,WAIF,6BACE,+BACE,sBAAMA,UAAU,eAAhB,0BAIN,+BACE,uCACA,wCACA,8CACA,6BACE,+BACE,sBAAMA,UAAU,gBAAhB,wBAGJ,0BAEF,+BACE,wCACA,wCACA,sEACA,gFACA,2EAEF,+BACE,8CACA,wCACA,8FACA,6BACE,iCACE,sBAAMA,UAAU,gBAAhB,kBADF,WAIF,6BACE,+BACE,sBAAMA,UAAU,eAAhB,+BAMV,mDACA,kCACE,gCACE,+BACE,0DACA,8CACA,8CACA,mDAGJ,gCACE,+BACE,+CACA,wCACA,kFACA,+BACE,iCACE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","file":"static/js/main.b995aa91.chunk.js","sourcesContent":["const Page: React.FC = () => {\n  return (\n    <div\n      className=\"scope-page\"\n      dangerouslySetInnerHTML={{\n        __html: `<p align=\"center\">\n  <a href=\"https://ant.design\">\n    <img width=\"200\" src=\"https://assets.xrkmm.cn/u/3202028/f7ae6e50-7336-4233-aa44-ee9f2d2e83dc.png\">\n  </a>\n</p>\n<h1 align=\"center\">向日葵妈妈 UI</h1>\n<div align=\"center\">\n<p>一套企业级 UI 和 支持React、Taro小程序的组件库。</p>\n</div>\n<h2>✨ 特性</h2>\n<ul>\n<li>🌈 提炼自企业级移动端产品的交互语言和视觉风格。</li>\n<li>📦 开箱即用的高质量组件。</li>\n<li>🛡 使用 TypeScript 开发，提供完整的类型定义文件。</li>\n<li>⚙️ 无缝切换支持小程序</li>\n<li>🎨 深入每个细节的主题定制能力。</li>\n</ul>\n<h2>🖥 兼容环境</h2>\n<ul>\n<li>现代浏览器和 IE11（需要 <a href=\"https://ant.design/docs/react/getting-started-cn#%E5%85%BC%E5%AE%B9%E6%80%A7\">polyfills</a>）。</li>\n<li>支持服务端渲染。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><a href=\"http://godban.github.io/browsers-support-badges/\"><img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png\" alt=\"IE / Edge\" width=\"24px\" height=\"24px\" /></a><br>IE / Edge</th>\n<th><a href=\"http://godban.github.io/browsers-support-badges/\"><img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png\" alt=\"Firefox\" width=\"24px\" height=\"24px\" /></a><br>Firefox</th>\n<th><a href=\"http://godban.github.io/browsers-support-badges/\"><img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png\" alt=\"Chrome\" width=\"24px\" height=\"24px\" /></a><br>Chrome</th>\n<th><a href=\"http://godban.github.io/browsers-support-badges/\"><img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png\" alt=\"Safari\" width=\"24px\" height=\"24px\" /></a><br>Safari</th>\n<th><a href=\"http://godban.github.io/browsers-support-badges/\"><img src=\"https://raw.githubusercontent.com/alrra/browser-logos/master/src/electron/electron_48x48.png\" alt=\"Electron\" width=\"24px\" height=\"24px\" /></a><br>Electron</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IE11, Edge</td>\n<td>last 2 versions</td>\n<td>last 2 versions</td>\n<td>last 2 versions</td>\n<td>last 2 versions</td>\n</tr>\n</tbody>\n</table>\n`,\n      }}\n    />\n  )\n}\n\nexport default Page\n","const Page: React.FC = () => {\n  return (\n    <div\n      className=\"scope-page\"\n      dangerouslySetInnerHTML={{\n        __html: `<h2>🔨 Taro使用示例</h2>\n<pre><code class=\"hljs language-bash\">yarn add @xrkmm/ui-taro\n</code></pre>\n<pre><code class=\"hljs language-jsx\"><span class=\"hljs-keyword\">import</span> { Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-taro&#x27;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-taro/dist/styles/index.css&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> (\n  <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> /&gt;</span></span>\n)\n</code></pre>\n<br />\n<h2>🔨 单纯React项目中使用示例</h2>\n<pre><code class=\"hljs language-bash\">yarn add @xrkmm/ui-h5\n</code></pre>\n<pre><code class=\"hljs language-jsx\"><span class=\"hljs-keyword\">import</span> { Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5/dist/styles/base.css&#x27;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5/dist/styles/index.css&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> (\n  <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> /&gt;</span></span>\n)\n</code></pre>\n<h3>🌈 定制主题和按需加载样式</h3>\n<p>参考 <a href=\"/customize\">定制主题</a> 文档。</p>\n`,\n      }}\n    />\n  )\n}\n\nexport default Page\n","const Page: React.FC = () => {\n  return (\n    <div\n      className=\"scope-page\"\n      dangerouslySetInnerHTML={{\n        __html: `<h2>自定义主题和按需加载样式</h2>\n<h5>因为自定义样式需要引入 <code><span class=\"hljs-attribute\">scss</span></code> 文件，所以需要安装 <code><span class=\"hljs-attribute\">sass-loader</span></code> <code><span class=\"hljs-attribute\">sass</span></code> 和 <code><span class=\"hljs-attribute\">postcss-pxtransform</span></code> 插件把 px 单位转换为 <code><span class=\"hljs-comment\">rem</span></code> 。</h5>\n<ol>\n<li>安装 <code><span class=\"hljs-attribute\">sass</span></code></li>\n</ol>\n<pre><code class=\"hljs language-bash\">npm i -D sass sass-loader\n</code></pre>\n<ol start=\"2\">\n<li>安装 <code><span class=\"hljs-attribute\">postcss-pxtransform</span></code></li>\n</ol>\n<pre><code class=\"hljs language-bash\">npm i -D postcss-pxtransform\n</code></pre>\n<ol start=\"3\">\n<li>配置<code><span class=\"hljs-attribute\">webpack</span></code></li>\n</ol>\n<pre><code class=\"hljs language-js\">    {\n      <span class=\"hljs-attr\">loader</span>: <span class=\"hljs-built_in\">require</span>.resolve(<span class=\"hljs-string\">&#x27;postcss-loader&#x27;</span>),\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">ident</span>: <span class=\"hljs-string\">&#x27;postcss&#x27;</span>,\n        <span class=\"hljs-attr\">plugins</span>: <span class=\"hljs-function\">() =&gt;</span> [\n          <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;postcss-flexbugs-fixes&#x27;</span>),\n          <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;postcss-preset-env&#x27;</span>)({\n            <span class=\"hljs-attr\">autoprefixer</span>: {\n              <span class=\"hljs-attr\">flexbox</span>: <span class=\"hljs-string\">&#x27;no-2009&#x27;</span>\n            },\n            <span class=\"hljs-attr\">stage</span>: <span class=\"hljs-number\">3</span>\n          }),\n          <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;postcss-pxtransform&#x27;</span>)({\n            <span class=\"hljs-attr\">platform</span>: <span class=\"hljs-string\">&#x27;h5&#x27;</span>,\n            <span class=\"hljs-attr\">designWidth</span>: <span class=\"hljs-number\">750</span>, <span class=\"hljs-comment\">// 设计图尺寸</span>\n            <span class=\"hljs-attr\">deviceRatio</span>: {\n              <span class=\"hljs-number\">640</span>: <span class=\"hljs-number\">2.34</span> / <span class=\"hljs-number\">2</span>,\n              <span class=\"hljs-number\">750</span>: <span class=\"hljs-number\">1</span>,\n              <span class=\"hljs-number\">828</span>: <span class=\"hljs-number\">1.81</span> / <span class=\"hljs-number\">2</span>\n            }\n          })\n        ]\n      },\n    }\n</code></pre>\n<h2>修改主题色调</h2>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-comment\">// 引入自定义主题</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;./custom.scss&#x27;</span>\n</code></pre>\n<pre><code class=\"hljs language-scss\"><span class=\"hljs-comment\">// custrom.scss</span>\n<span class=\"hljs-keyword\">@import</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5/styles/index.scss&#x27;</span>;\n<span class=\"hljs-keyword\">@import</span> <span class=\"hljs-string\">&#x27;./variables.scss&#x27;</span>\n</code></pre>\n<pre><code class=\"hljs language-scss\"><span class=\"hljs-comment\">// variables.scss</span>\n<span class=\"hljs-comment\">// 页面边距</span>\n<span class=\"hljs-variable\">$btnMargin</span>: <span class=\"hljs-number\">7.5px</span>;\n\n<span class=\"hljs-comment\">// 品牌色</span>\n<span class=\"hljs-variable\">$primary</span>: <span class=\"hljs-number\">#000</span>;\n\n<span class=\"hljs-comment\">// 橙色标签底色</span>\n<span class=\"hljs-variable\">$warn</span>: <span class=\"hljs-number\">#fff0e5</span>;\n\n<span class=\"hljs-comment\">// 警告色，面性按钮，高亮字体颜色如价格</span>\n<span class=\"hljs-variable\">$error</span>: <span class=\"hljs-number\">#ff6d00</span>;\n\n<span class=\"hljs-variable\">$white</span>: <span class=\"hljs-number\">#fff</span>;\n\n<span class=\"hljs-comment\">// 背景色</span>\n<span class=\"hljs-variable\">$bg</span>: <span class=\"hljs-number\">#f9fafd</span>;\n\n<span class=\"hljs-comment\">// 禁用色</span>\n<span class=\"hljs-variable\">$disable</span>: <span class=\"hljs-number\">#dde0e4</span>;\n\n<span class=\"hljs-comment\">// 占位图图标色值（灰底）</span>\n<span class=\"hljs-variable\">$placeholder</span>: <span class=\"hljs-number\">#ebeef6</span>;\n\n<span class=\"hljs-comment\">// 链接颜色</span>\n<span class=\"hljs-variable\">$link</span>: <span class=\"hljs-number\">#00a9ff</span>;\n\n<span class=\"hljs-comment\">// 提醒我按钮底色</span>\n<span class=\"hljs-variable\">$pop</span>: <span class=\"hljs-number\">#00ce73</span>;\n\n<span class=\"hljs-comment\">// 背景颜色</span>\n<span class=\"hljs-variable\">$bg</span>: <span class=\"hljs-number\">#f6f7fb</span>;\n\n<span class=\"hljs-comment\">// 一级文字色值，重要基础icon色值</span>\n<span class=\"hljs-variable\">$text1</span>: <span class=\"hljs-number\">#242629</span>;\n\n<span class=\"hljs-comment\">// 二级文字色值</span>\n<span class=\"hljs-variable\">$text2</span>: <span class=\"hljs-number\">#818894</span>;\n\n<span class=\"hljs-comment\">// 三级文字色值，搜索框未输入状态提示文字</span>\n<span class=\"hljs-variable\">$text3</span>: <span class=\"hljs-number\">#b3b8bf</span>;\n\n<span class=\"hljs-comment\">// 二级基础控件icon色值</span>\n<span class=\"hljs-variable\">$icon1</span>: <span class=\"hljs-number\">#567</span>;\n\n<span class=\"hljs-comment\">// 三级基础控件icon色值，选择框icon，输入框删除icon，普通内容卡片跳转箭头</span>\n<span class=\"hljs-variable\">$icon2</span>: <span class=\"hljs-number\">#99a3ad</span>;\n\n<span class=\"hljs-comment\">// 四级基础控件icon色值，最弱层级</span>\n<span class=\"hljs-variable\">$icon3</span>: <span class=\"hljs-number\">#ccd1d6</span>;\n\n<span class=\"hljs-comment\">// toast 颜色</span>\n<span class=\"hljs-variable\">$toastBg</span>: rgba(<span class=\"hljs-number\">0</span> , <span class=\"hljs-number\">0</span> , <span class=\"hljs-number\">0</span> , <span class=\"hljs-number\">0.7</span>);\n\n<span class=\"hljs-comment\">// 遮罩层颜色</span>\n<span class=\"hljs-variable\">$mask</span>: rgba(<span class=\"hljs-number\">0</span> , <span class=\"hljs-number\">0</span> , <span class=\"hljs-number\">0</span> , <span class=\"hljs-number\">0.7</span>);\n\n<span class=\"hljs-comment\">// 层级</span>\n<span class=\"hljs-variable\">$portalIndex</span>: <span class=\"hljs-number\">900</span>;\n<span class=\"hljs-variable\">$maskIndex</span>: <span class=\"hljs-number\">900</span>;\n<span class=\"hljs-variable\">$SlidInIndex</span>: <span class=\"hljs-number\">901</span>;\n\n<span class=\"hljs-comment\">// 角度</span>\n<span class=\"hljs-variable\">$radius</span>: <span class=\"hljs-number\">15px</span>;\n</code></pre>\n<h2>按需引入样式</h2>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5/styles/components/Button.scss&#x27;</span>\n</code></pre>\n`,\n      }}\n    />\n  )\n}\n\nexport default Page\n","import { useState } from 'react'\nimport { showActionSheet, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n\n  const showAction = () => {\n    showActionSheet({ list: list })\n      .then((res) => setCity(list[res.tapIndex]))\n      .catch((err) => console.error)\n  }\n\n  return <Button onClick={showAction}>选择城市: {city}</Button>\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { ActionSheet, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n      >\n        <div onClick={() => onSelect('广州')}>广州</div>\n        <div onClick={() => onSelect('深圳')}>深圳</div>\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem\n            key={item}\n            onClick={() => onSelect(item)}\n            text={item}\n          />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n  const [showSub, setShowSub] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>标题: {city}</Button>\n      <Button onClick={() => setShowSub(true)}>副标题: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem\n            key={item}\n            onClick={() => onSelect(item)}\n            text={item}\n          />\n        ))}\n      </ActionSheet>\n\n      <ActionSheet\n        title=\"请选择城市\"\n        subTitle=\"建议选广州\"\n        visible={showSub}\n        onClose={() => setShowSub(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem\n            key={item}\n            onClick={() => onSelect(item)}\n            text={item}\n          />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [showLeft, setShowLeft] = useState(false)\n  const [showCenter, setShowCenter] = useState(false)\n  const [showRight, setShowRight] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShowLeft(false)\n    setShowCenter(false)\n    setShowRight(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShowLeft(true)}>左边: {city}</Button>\n      <Button onClick={() => setShowCenter(true)}>中间: {city}</Button>\n      <Button onClick={() => setShowRight(true)}>右边: {city}</Button>\n\n      <ActionSheet\n        title=\"请选择城市\"\n        subTitle=\"建议选广州\"\n        titleAlign=\"left\"\n        visible={showLeft}\n        onClose={() => setShowLeft(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem\n            key={item}\n            onClick={() => onSelect(item)}\n            text={item}\n          />\n        ))}\n      </ActionSheet>\n\n      <ActionSheet\n        title=\"请选择城市\"\n        subTitle=\"建议选广州\"\n        titleAlign=\"center\"\n        visible={showCenter}\n        onClose={() => setShowCenter(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem\n            key={item}\n            onClick={() => onSelect(item)}\n            text={item}\n          />\n        ))}\n      </ActionSheet>\n\n      <ActionSheet\n        title=\"请选择城市\"\n        subTitle=\"建议选广州\"\n        titleAlign=\"right\"\n        visible={showRight}\n        onClose={() => setShowRight(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem\n            key={item}\n            onClick={() => onSelect(item)}\n            text={item}\n          />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        closable\n        onClose={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem\n            key={item}\n            onClick={() => onSelect(item)}\n            text={item}\n          />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        showCancel\n        showOk\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n        onOk={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem\n            key={item}\n            onClick={() => onSelect(item)}\n            text={item}\n          />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        showCancel\n        showOk\n        cancelText=\"我就不选\"\n        okText=\"我选好了哦\"\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n        onOk={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem\n            key={item}\n            onClick={() => onSelect(item)}\n            text={item}\n          />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { ActionSheet, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        maskClosable={false}\n        onClose={() => setShow(false)}\n      >\n        <div onClick={() => onSelect('广州')}>广州</div>\n        <div onClick={() => onSelect('深圳')}>深圳</div>\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n","/* eslint-disabled */\n//\nimport { useState } from 'react'\nimport { Divider, Tooltip, Button } from 'antd'\nimport { CodeSandboxOutlined, CopyOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport BASIS from './demo/BASIS'\nimport VISIBLE from './demo/VISIBLE'\nimport ITEM from './demo/ITEM'\nimport TITLE from './demo/TITLE'\nimport TITLEALIGN from './demo/TITLEALIGN'\nimport CLOSE from './demo/CLOSE'\nimport BUTTON from './demo/BUTTON'\nimport BUTTONTEXT from './demo/BUTTONTEXT'\nimport MASK from './demo/MASK'\n\nconst Pgae: React.FC = () => {\n  const [_BASIS, _setBASIS] = useState(false)\n  const [_VISIBLE, _setVISIBLE] = useState(false)\n  const [_ITEM, _setITEM] = useState(false)\n  const [_TITLE, _setTITLE] = useState(false)\n  const [_TITLEALIGN, _setTITLEALIGN] = useState(false)\n  const [_CLOSE, _setCLOSE] = useState(false)\n  const [_BUTTON, _setBUTTON] = useState(false)\n  const [_BUTTONTEXT, _setBUTTONTEXT] = useState(false)\n  const [_MASK, _setMASK] = useState(false)\n\n  return (\n    <>\n      <h1>动作面板 ActionSheet</h1>\n      <blockquote>\n        <p>\n          从底部弹出的模态框，提供\n          <code>\n            <span className=\"hljs-attribute\">API</span>\n          </code>\n          唤起，也支持<code>JSX方</code>\n          式使用，也支持提供标题和描述。内置固定的展示样式。也支持插入子节点定制操作板内容。\n        </p>\n      </blockquote>\n      <h3>什么时候使用</h3>\n      <p>用户在操作时不必离开当前任务，操作完成后，可以平滑地回到原任务。</p>\n      <div className=\"solt-demos\">\n        <div className=\"demo-box\">\n          <h3>API方式调用</h3>\n\n          <div className=\"demo\">\n            <BASIS />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以直接通过API唤起{' '}\n              <code>\n                <span className=\"hljs-attribute\">ActionSheet</span>\n              </code>{' '}\n              。对于比较简单的场景可以直接使用此方式。API返回一个\n              <code>\n                <span className=\"hljs-built_in\">Promise</span>\n              </code>\n              对象。用户选择会执行{' '}\n              <code>\n                <span className=\"hljs-attribute\">then</span>\n              </code>\n              。取消和唤起失败执行\n              <code>\n                <span className=\"hljs-keyword\">catch</span>\n              </code>\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { showActionSheet, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n\n  const showAction = () => {\n    showActionSheet({ list: list  })\n      .then((res) => setCity(list[res.tapIndex]))\n      .catch((err) => console.error)\n  }\n\n  return (\n    <Button onClick={showAction}>选择城市: {city}</Button>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setBASIS(!_BASIS)}\n                />\n              </Tooltip>\n            </div>\n            {_BASIS && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { showActionSheet, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> list = [<span class=\"hljs-string\">&#x27;广州&#x27;</span>, <span class=\"hljs-string\">&#x27;深圳&#x27;</span>]\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [city, setCity] = useState(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n\n  <span class=\"hljs-keyword\">const</span> showAction = <span class=\"hljs-function\">() =&gt;</span> {\n    showActionSheet({ <span class=\"hljs-attr\">list</span>: list  })\n      .then(<span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> setCity(list[res.tapIndex]))\n      .catch(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.error)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{showAction}</span>&gt;</span>选择城市: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>JSX 方式使用</h3>\n\n          <div className=\"demo\">\n            <VISIBLE />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              JSX方式使用需要通过\n              <code>\n                <span className=\"hljs-attribute\">visible</span>\n              </code>\n              自定义。JSX方式使用提高非常多的选项来灵活控制样式\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { ActionSheet, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n      >\n        <div onClick={() => onSelect('广州')}>广州</div>\n        <div onClick={() => onSelect('深圳')}>深圳</div>\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setVISIBLE(!_VISIBLE)}\n                />\n              </Tooltip>\n            </div>\n            {_VISIBLE && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { ActionSheet, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [city, setCity] = useState(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onSelect = (city: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">void</span> =&gt;</span> {\n    setCity(city)\n    setShow(<span class=\"hljs-literal\">false</span>)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)}&gt;选择城市: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)}\n      &gt;\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(&#x27;广州&#x27;)}&gt;广州<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(&#x27;深圳&#x27;)}&gt;深圳<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>ActionSheetItem 一致的样式</h3>\n\n          <div className=\"demo\">\n            <ITEM />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              如果对于编写ActionSheet一致风格的样式感觉到麻烦，使用可以\n              <code>\n                <span className=\"hljs-attribute\">ActionSheetItem</span>\n              </code>{' '}\n              组件\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem key={item} onClick={() => onSelect(item)} text={item} />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setITEM(!_ITEM)}\n                />\n              </Tooltip>\n            </div>\n            {_ITEM && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { ActionSheet, ActionSheetItem, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> list = [<span class=\"hljs-string\">&#x27;广州&#x27;</span>, <span class=\"hljs-string\">&#x27;深圳&#x27;</span>]\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [city, setCity] = useState(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onSelect = (city: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">void</span> =&gt;</span> {\n    setCity(city)\n    setShow(<span class=\"hljs-literal\">false</span>)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)}&gt;选择城市: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)}\n      &gt;\n        {list.map((item) =&gt; (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheetItem</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(item)} text={item} /&gt;\n        ))}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>标题和副标题</h3>\n\n          <div className=\"demo\">\n            <TITLE />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-attribute\">subTitle</span>\n              </code>{' '}\n              和{' '}\n              <code>\n                <span className=\"hljs-built_in\">title</span>\n              </code>{' '}\n              可以控制操作拌面的标题\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n  const [showSub, setShowSub] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>标题: {city}</Button>\n      <Button onClick={() => setShowSub(true)}>副标题: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem key={item} onClick={() => onSelect(item)} text={item} />\n        ))}\n      </ActionSheet>\n\n      <ActionSheet\n        title=\"请选择城市\"\n        subTitle=\"建议选广州\"\n        visible={showSub}\n        onClose={() => setShowSub(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem key={item} onClick={() => onSelect(item)} text={item} />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setTITLE(!_TITLE)}\n                />\n              </Tooltip>\n            </div>\n            {_TITLE && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { ActionSheet, ActionSheetItem, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> list = [<span class=\"hljs-string\">&#x27;广州&#x27;</span>, <span class=\"hljs-string\">&#x27;深圳&#x27;</span>]\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [city, setCity] = useState(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n  <span class=\"hljs-keyword\">const</span> [showSub, setShowSub] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onSelect = (city: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">void</span> =&gt;</span> {\n    setCity(city)\n    setShow(<span class=\"hljs-literal\">false</span>)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)}&gt;标题: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShowSub(true)}&gt;副标题: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)}\n      &gt;\n        {list.map((item) =&gt; (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheetItem</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(item)} text={item} /&gt;\n        ))}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">subTitle</span>=<span class=\"hljs-string\">&quot;建议选广州&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{showSub}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShowSub(false)}\n      &gt;\n        {list.map((item) =&gt; (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheetItem</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(item)} text={item} /&gt;\n        ))}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>标题的方向</h3>\n\n          <div className=\"demo\">\n            <TITLEALIGN />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-attribute\">titleAlign</span>\n              </code>{' '}\n              可以控制操作板的方向，并且具有{' '}\n              <code>\n                <span className=\"hljs-built_in\">left</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">center</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">right</span>\n              </code>{' '}\n              可选值。默认为{' '}\n              <code>\n                <span className=\"hljs-built_in\">left</span>\n              </code>\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [showLeft, setShowLeft] = useState(false)\n  const [showCenter, setShowCenter] = useState(false)\n  const [showRight, setShowRight] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShowLeft(false)\n    setShowCenter(false)\n    setShowRight(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShowLeft(true)}>左边: {city}</Button>\n      <Button onClick={() => setShowCenter(true)}>中间: {city}</Button>\n      <Button onClick={() => setShowRight(true)}>右边: {city}</Button>\n\n      <ActionSheet\n        title=\"请选择城市\"\n        subTitle=\"建议选广州\"\n        titleAlign=\"left\"\n        visible={showLeft}\n        onClose={() => setShowLeft(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem key={item} onClick={() => onSelect(item)} text={item} />\n        ))}\n      </ActionSheet>\n\n      <ActionSheet\n        title=\"请选择城市\"\n        subTitle=\"建议选广州\"\n        titleAlign=\"center\"\n        visible={showCenter}\n        onClose={() => setShowCenter(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem key={item} onClick={() => onSelect(item)} text={item} />\n        ))}\n      </ActionSheet>\n\n      <ActionSheet\n        title=\"请选择城市\"\n        subTitle=\"建议选广州\"\n        titleAlign=\"right\"\n        visible={showRight}\n        onClose={() => setShowRight(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem key={item} onClick={() => onSelect(item)} text={item} />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setTITLEALIGN(!_TITLEALIGN)}\n                />\n              </Tooltip>\n            </div>\n            {_TITLEALIGN && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { ActionSheet, ActionSheetItem, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> list = [<span class=\"hljs-string\">&#x27;广州&#x27;</span>, <span class=\"hljs-string\">&#x27;深圳&#x27;</span>]\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [city, setCity] = useState(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n  <span class=\"hljs-keyword\">const</span> [showLeft, setShowLeft] = useState(<span class=\"hljs-literal\">false</span>)\n  <span class=\"hljs-keyword\">const</span> [showCenter, setShowCenter] = useState(<span class=\"hljs-literal\">false</span>)\n  <span class=\"hljs-keyword\">const</span> [showRight, setShowRight] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onSelect = (city: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">void</span> =&gt;</span> {\n    setCity(city)\n    setShowLeft(<span class=\"hljs-literal\">false</span>)\n    setShowCenter(<span class=\"hljs-literal\">false</span>)\n    setShowRight(<span class=\"hljs-literal\">false</span>)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShowLeft(true)}&gt;左边: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShowCenter(true)}&gt;中间: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShowRight(true)}&gt;右边: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">subTitle</span>=<span class=\"hljs-string\">&quot;建议选广州&quot;</span>\n        <span class=\"hljs-attr\">titleAlign</span>=<span class=\"hljs-string\">&quot;left&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{showLeft}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShowLeft(false)}\n      &gt;\n        {list.map((item) =&gt; (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheetItem</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(item)} text={item} /&gt;\n        ))}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">subTitle</span>=<span class=\"hljs-string\">&quot;建议选广州&quot;</span>\n        <span class=\"hljs-attr\">titleAlign</span>=<span class=\"hljs-string\">&quot;center&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{showCenter}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShowCenter(false)}\n      &gt;\n        {list.map((item) =&gt; (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheetItem</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(item)} text={item} /&gt;\n        ))}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">subTitle</span>=<span class=\"hljs-string\">&quot;建议选广州&quot;</span>\n        <span class=\"hljs-attr\">titleAlign</span>=<span class=\"hljs-string\">&quot;right&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{showRight}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShowRight(false)}\n      &gt;\n        {list.map((item) =&gt; (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheetItem</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(item)} text={item} /&gt;\n        ))}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>开启关闭按钮</h3>\n\n          <div className=\"demo\">\n            <CLOSE />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-attribute\">closable</span>\n              </code>{' '}\n              属性控制是否显示右上角的关闭按钮\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        closable\n        onClose={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem key={item} onClick={() => onSelect(item)} text={item} />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setCLOSE(!_CLOSE)}\n                />\n              </Tooltip>\n            </div>\n            {_CLOSE && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { ActionSheet, ActionSheetItem, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> list = [<span class=\"hljs-string\">&#x27;广州&#x27;</span>, <span class=\"hljs-string\">&#x27;深圳&#x27;</span>]\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [city, setCity] = useState(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onSelect = (city: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">void</span> =&gt;</span> {\n    setCity(city)\n    setShow(<span class=\"hljs-literal\">false</span>)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)}&gt;选择城市: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">closable</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)}\n      &gt;\n        {list.map((item) =&gt; (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheetItem</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(item)} text={item} /&gt;\n        ))}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>底部的操作按钮</h3>\n\n          <div className=\"demo\">\n            <BUTTON />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-attribute\">showCancel</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">showOk</span>\n              </code>{' '}\n              可以分别单独控制显示底部的操作按钮。\n              <code>\n                <span className=\"hljs-attribute\">onOk</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">onClose</span>\n              </code>{' '}\n              分别对应操作按钮的回调事件,并且操作按钮的文案也可以通过\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        showCancel\n        showOk\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n        onOk={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem key={item} onClick={() => onSelect(item)} text={item} />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setBUTTON(!_BUTTON)}\n                />\n              </Tooltip>\n            </div>\n            {_BUTTON && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { ActionSheet, ActionSheetItem, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> list = [<span class=\"hljs-string\">&#x27;广州&#x27;</span>, <span class=\"hljs-string\">&#x27;深圳&#x27;</span>]\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [city, setCity] = useState(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onSelect = (city: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">void</span> =&gt;</span> {\n    setCity(city)\n    setShow(<span class=\"hljs-literal\">false</span>)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)}&gt;选择城市: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">showCancel</span>\n        <span class=\"hljs-attr\">showOk</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)}\n        onOk={() =&gt; setShow(false)}\n      &gt;\n        {list.map((item) =&gt; (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheetItem</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(item)} text={item} /&gt;\n        ))}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>自定义底部的操作按钮的内容</h3>\n\n          <div className=\"demo\">\n            <BUTTONTEXT />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-attribute\">cancelText</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">okText</span>\n              </code>{' '}\n              可以定义底部按钮的内容\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { ActionSheet, ActionSheetItem, Button } from '@xrkmm/ui-h5'\n\nconst list = ['广州', '深圳']\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        showCancel\n        showOk\n        cancelText=\"我就不选\"\n        okText=\"我选好了哦\"\n        title=\"请选择城市\"\n        visible={show}\n        onClose={() => setShow(false)}\n        onOk={() => setShow(false)}\n      >\n        {list.map((item) => (\n          <ActionSheetItem key={item} onClick={() => onSelect(item)} text={item} />\n        ))}\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setBUTTONTEXT(!_BUTTONTEXT)}\n                />\n              </Tooltip>\n            </div>\n            {_BUTTONTEXT && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { ActionSheet, ActionSheetItem, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> list = [<span class=\"hljs-string\">&#x27;广州&#x27;</span>, <span class=\"hljs-string\">&#x27;深圳&#x27;</span>]\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [city, setCity] = useState(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onSelect = (city: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">void</span> =&gt;</span> {\n    setCity(city)\n    setShow(<span class=\"hljs-literal\">false</span>)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)}&gt;选择城市: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">showCancel</span>\n        <span class=\"hljs-attr\">showOk</span>\n        <span class=\"hljs-attr\">cancelText</span>=<span class=\"hljs-string\">&quot;我就不选&quot;</span>\n        <span class=\"hljs-attr\">okText</span>=<span class=\"hljs-string\">&quot;我选好了哦&quot;</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)}\n        onOk={() =&gt; setShow(false)}\n      &gt;\n        {list.map((item) =&gt; (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheetItem</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(item)} text={item} /&gt;\n        ))}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>遮罩层不可操作</h3>\n\n          <div className=\"demo\">\n            <MASK />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              通过\n              <code>\n                <span className=\"hljs-attribute\">maskClosable</span>\n              </code>{' '}\n              可以控制用户点击遮罩层是否允许关闭\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { ActionSheet, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [city, setCity] = useState('')\n  const [show, setShow] = useState(false)\n\n  const onSelect = (city: string): void => {\n    setCity(city)\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>选择城市: {city}</Button>\n      <ActionSheet\n        title=\"请选择城市\"\n        visible={show}\n        maskClosable={false}\n        onClose={() => setShow(false)}\n      >\n        <div onClick={() => onSelect('广州')}>广州</div>\n        <div onClick={() => onSelect('深圳')}>深圳</div>\n      </ActionSheet>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setMASK(!_MASK)}\n                />\n              </Tooltip>\n            </div>\n            {_MASK && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { ActionSheet, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [city, setCity] = useState(<span class=\"hljs-string\">&#x27;&#x27;</span>)\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onSelect = (city: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">void</span> =&gt;</span> {\n    setCity(city)\n    setShow(<span class=\"hljs-literal\">false</span>)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)}&gt;选择城市: {city}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ActionSheet</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;请选择城市&quot;</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">maskClosable</span>=<span class=\"hljs-string\">{false}</span>\n        <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)}\n      &gt;\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(&#x27;广州&#x27;)}&gt;广州<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> onSelect(&#x27;深圳&#x27;)}&gt;深圳<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ActionSheet</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n      </div>\n      <br />\n      ## API - `showActionSheet(option: Option): Promise`\n      通过API唤起操作版。返回一个Promise对象。tapIndex 为用户选中索引\n      <h5>Option</h5>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>list</td>\n            <td>是</td>\n            <td>选项列表,微信端最大为6条。h5不限制</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>[]\n              </code>\n            </td>\n            <td>\n              <code>[]</code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h5>Result</h5>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>说明</th>\n            <th>类型</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>tapIndex</td>\n            <td>用户选中是索引</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">number</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>errMsg</td>\n            <td>回调信息</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h2>ActionSheet Props</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>visible</td>\n            <td>是</td>\n            <td>是否显示</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>showHead</td>\n            <td>否</td>\n            <td>是否显示头部</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">true</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>title</td>\n            <td>否</td>\n            <td>标题</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>subTitle</td>\n            <td>否</td>\n            <td>副标题</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>titleAlign</td>\n            <td>否</td>\n            <td>标题水平方向</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">left</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">center</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">right</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">left</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>closable</td>\n            <td>否</td>\n            <td>是否显示关闭按钮</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>showCancel</td>\n            <td>否</td>\n            <td>是否显示底部关闭按钮</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>showOk</td>\n            <td>否</td>\n            <td>是否显示底部确定按钮</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>cancelText</td>\n            <td>否</td>\n            <td>取消按钮的文案</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>{' '}\n              <code>React.ReactNode</code>\n            </td>\n            <td>关闭</td>\n          </tr>\n          <tr>\n            <td>okText</td>\n            <td>否</td>\n            <td>确定按钮的文案</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>{' '}\n              <code>React.ReactNode</code>\n            </td>\n            <td>确定</td>\n          </tr>\n          <tr>\n            <td>maskClosable</td>\n            <td>否</td>\n            <td>点击蒙层是否允许关闭</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">true</span>\n              </code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h1>ActionSheet Event</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>事件名称</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>参数</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>onClose</td>\n            <td>否</td>\n            <td>关闭事件或点击取消事件</td>\n            <td>null</td>\n          </tr>\n          <tr>\n            <td>onOk</td>\n            <td>否</td>\n            <td>点击确认按钮回调</td>\n            <td>null</td>\n          </tr>\n          <tr>\n            <td>onHide</td>\n            <td>否</td>\n            <td>\n              完全隐藏的回调，慎用，只有组件处于隐藏状态都会触发，不管初始化还是什么状态\n            </td>\n            <td>null</td>\n          </tr>\n        </tbody>\n      </table>\n      <h2>ActionSheetItem Props</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>text</td>\n            <td>是</td>\n            <td>文案</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td>确定</td>\n          </tr>\n          <tr>\n            <td>align</td>\n            <td>否</td>\n            <td>文字水平方向</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">left</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">center</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">right</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">left</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>suffix</td>\n            <td>否</td>\n            <td>右边文案</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>{' '}\n              <code>React.ReactNode</code>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>onClick</td>\n            <td>否</td>\n            <td>点击事件</td>\n            <td>null</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default Pgae\n","import { RouteProps } from 'react-router-dom'\n\ninterface RoutesProps extends RouteProps {\n  title: string;\n  type: string;\n  sort: number;\n}\n\nconst Routes: RoutesProps[] = [\n  {\n    path: '/ActionSheet',\n    component: require('../views/ActionSheet').default,\n    title: '动作面板 ActionSheet',\n    type: '反馈',\n    sort: 2,\n  },\n  {\n    path: '/Button',\n    component: require('../views/Button').default,\n    title: '按钮 Button',\n    type: '通用',\n    sort: 2,\n  },\n  {\n    path: '/Drawer',\n    component: require('../views/Drawer').default,\n    title: '抽屉 Drawer',\n    type: '反馈',\n    sort: 3,\n  },\n  {\n    path: '/Empty',\n    component: require('../views/Empty').default,\n    title: '空状态 Empty',\n    type: '状态展示',\n    sort: 10,\n  },\n  {\n    path: '/Icon',\n    component: require('../views/Icon').default,\n    title: '图标 Icon',\n    type: '通用',\n    sort: 1,\n  },\n  {\n    path: '/Modal',\n    component: require('../views/Modal').default,\n    title: '模态对话框  Modal',\n    type: '反馈',\n    sort: 1,\n  },\n  {\n    path: '/Toast',\n    component: require('../views/Toast').default,\n    title: '轻提示 Toast',\n    type: '反馈',\n    sort: 4,\n  },\n]\n\nexport default Routes\n","import { RouteProps } from 'react-router-dom'\n\ninterface RoutesProps extends RouteProps {\n  title: string;\n}\n\nconst Routes: RoutesProps[] = [\n  {\n    path: '/Publish',\n    component: require('../components/Publish').default,\n    title: '贡献指南'\n  },\n  {\n    path: '/md',\n    component: require('../components/Md').default,\n    title: '组件md文件编写规范'\n  },\n  {\n    path: '/history',\n    component: require('../components/history').default,\n    title: '更新历史'\n  },\n]\n\nexport default Routes\n","import { RouteProps } from 'react-router-dom'\n\ninterface RoutesProps extends RouteProps {\n  title: string;\n}\n\nconst Routes: RoutesProps[] = [\n  {\n    path: '/Introduce',\n    component: require('../components/introduce').default,\n    title: '介绍'\n  },\n  {\n    path: '/Start',\n    component: require('../components/start').default,\n    title: '快速开始'\n  },\n  {\n    path: '/Customize',\n    component: require('../components/customize').default,\n    title: '自定义主题和按需引入样式'\n  },\n]\n\nexport default Routes\n","import { useHistory, useLocation } from \"react-router-dom\"\nimport { Layout, Menu } from 'antd'\nimport { RouteProps } from 'react-router-dom'\nimport CompsRoutes from '../../router/components'\nimport OtherRoutes from '../../router/other'\nimport StartRoutes from '../../router/start'\nimport './style.scss'\n\ninterface RoutesProps extends RouteProps {\n  title: string;\n  type: string;\n  sort: number;\n}\n\nconst { Header, Content, Footer, Sider } = Layout\n\nconst ShowCompsRoutes: Record<string, RoutesProps[]> = {}\n\nCompsRoutes.map((item) => {\n  if (ShowCompsRoutes[item.type])\n    ShowCompsRoutes[item.type].push(item)\n  else\n    ShowCompsRoutes[item.type] = [item]\n})\n\nObject.keys(ShowCompsRoutes).map((key) => ShowCompsRoutes[key] = ShowCompsRoutes[key].sort((item, item2) => item.sort - item2.sort))\n\nconst View: React.FC = ({ children }) => {\n  const location = useLocation()\n  const history = useHistory()\n\n  const onClick = (path: string) => history.push(path)\n\n  return (\n    <Layout className=\"layout\">\n      <Header className=\"site-layout-background header\" >\n        <img className=\"logo\" src=\"https://assets.xrkmm.cn/u/4000002499670412/9ec97723-bf4b-47c4-887b-b8d57805b7ab.jpeg\" alt=\"logo\" />\n        <h1>@xrkmm/ui</h1>\n      </Header>\n\n      <Layout className=\"site-layout\">\n        <Sider theme=\"light\">\n          <Menu selectedKeys={[location.pathname]} mode=\"inline\">\n          <Menu.ItemGroup title=\"入门\">\n              <Menu.Divider />\n              {StartRoutes.map((item) => (\n                <Menu.Item\n                  key={item.path as string}\n                  onClick={() => onClick(item.path as string)}\n                >\n                  {item.title}\n                </Menu.Item>\n              ))}\n            </Menu.ItemGroup>\n            <Menu.Divider />\n            {Object.keys(ShowCompsRoutes).map((key) => (\n              <Menu.ItemGroup title={key + '组件'} key={key}>\n                {ShowCompsRoutes[key].map((item) => (\n                  <Menu.Item\n                    key={item.path as string}\n                    onClick={() => onClick(item.path as string)}\n                  >\n                    {item.title}\n                  </Menu.Item>\n                ))}\n              </Menu.ItemGroup>\n            ))}\n            <Menu.ItemGroup title=\"其他\">\n              <Menu.Divider />\n              {OtherRoutes.map((item) => (\n                <Menu.Item\n                  key={item.path as string}\n                  onClick={() => onClick(item.path as string)}\n                >\n                  {item.title}\n                </Menu.Item>\n              ))}\n            </Menu.ItemGroup>\n          </Menu>\n        </Sider>\n\n        <Content className=\"content site-layout-background\">\n          <div className=\"solt\">\n            {children}\n          </div>\n          <Footer className=\"floor\" >XRKMM-UI ©2021 Created by 向日葵妈妈</Footer>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default View\n","import { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Layout from './components/layout'\nimport CompsRoutes from './router/components'\nimport OtherRoutes from './router/other'\nimport Start from './router/start'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          {Start.map((item) => <Route {...item} key={item.path as string} />)}\n          {CompsRoutes.map((item) => <Route {...item} key={item.path as string} />)}\n          {OtherRoutes.map((item) => <Route {...item} key={item.path as string} />)}\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './theme/theme.less'\nimport './theme/highlight.css'\nimport '../../package-h5/dist/styles/base.css'\nimport '../../package-h5/dist/styles/index.css'\nimport '../../package-h5/icons/style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <>\n      <Button type=\"primary\">向日葵妈妈UI</Button>\n      <Button type=\"warn\">向日葵妈妈UI</Button>\n      <Button type=\"error\">向日葵妈妈UI</Button>\n      <Button type=\"link\">向日葵妈妈UI</Button>\n      <Button type=\"pop\">向日葵妈妈UI</Button>\n    </>\n  )\n}\n\nexport default Demo\n","import { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <>\n      <Button size=\"max\">max</Button>\n      <Button size=\"big\">big</Button>\n      <Button size=\"large\">large</Button>\n      <Button size=\"middle\">middle</Button>\n      <Button size=\"small\">small</Button>\n      <Button size=\"mini\">mini</Button>\n    </>\n  )\n}\n\nexport default Demo\n","import { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return <Button block>向日葵妈妈UI</Button>\n}\n\nexport default Demo\n","import { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const click = () => alert('点击了按钮')\n\n  return (\n    <>\n      <Button onClick={click}>可点击的</Button>\n      <Button onClick={click} disabled>\n        禁用的\n      </Button>\n    </>\n  )\n}\n\nexport default Demo\n","import { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <>\n      <Button type=\"primary\" ghost>\n        primary\n      </Button>\n      <Button type=\"warn\" ghost>\n        warn\n      </Button>\n      <Button type=\"error\" ghost>\n        error\n      </Button>\n      <Button type=\"link\" ghost>\n        link\n      </Button>\n      <Button type=\"pop\" ghost>\n        pop\n      </Button>\n    </>\n  )\n}\n\nexport default Demo\n","import { Button, Icon } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <>\n      <Button type=\"primary\" icon={<Icon name=\"service\" />} />\n      <Button type=\"warn\" icon={<Icon name=\"add\" />} />\n      <Button type=\"error\" icon={<Icon name=\"collected\" />} />\n      <Button type=\"link\" icon={<Icon name=\"set\" />} />\n      <Button type=\"pop\" icon={<Icon name=\"menu\" />} />\n      <Button type=\"primary\" icon={<Icon name=\"service\" />}>\n        联系客服\n      </Button>\n    </>\n  )\n}\n\nexport default Demo\n","/* eslint-disabled */\n//\nimport { useState } from 'react'\nimport { Divider, Tooltip, Button } from 'antd'\nimport { CodeSandboxOutlined, CopyOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport TYEP from './demo/TYEP'\nimport SIZE from './demo/SIZE'\nimport BLOCK from './demo/BLOCK'\nimport CLICK from './demo/CLICK'\nimport GHOST from './demo/GHOST'\nimport ICON from './demo/ICON'\n\nconst Pgae: React.FC = () => {\n  const [_TYEP, _setTYEP] = useState(false)\n  const [_SIZE, _setSIZE] = useState(false)\n  const [_BLOCK, _setBLOCK] = useState(false)\n  const [_CLICK, _setCLICK] = useState(false)\n  const [_GHOST, _setGHOST] = useState(false)\n  const [_ICON, _setICON] = useState(false)\n\n  return (\n    <>\n      <h1>按钮 Button</h1>\n      <blockquote>\n        <p>\n          标记了一个（或封装一组）操作命令，响应用户点击行为，触发相应的业务逻辑。\n          我们提供了五种风格按钮。\n        </p>\n      </blockquote>\n      <ul>\n        <li>\n          <code>\n            <span className=\"hljs-attribute\">primary</span>\n          </code>\n          ： 默认品牌色调的按钮\n        </li>\n        <li>\n          <code>\n            <span className=\"hljs-attribute\">warn</span>\n          </code>{' '}\n          ：轻色调风格的按钮\n        </li>\n        <li>\n          <code>\n            <span className=\"hljs-keyword\">error</span>\n          </code>{' '}\n          ：醒目的风格按钮\n        </li>\n        <li>\n          <code>\n            <span className=\"hljs-attribute\">link</span>\n          </code>{' '}\n          ：链接风格的按钮\n        </li>\n        <li>\n          <code>\n            <span className=\"hljs-keyword\">pop</span>\n          </code>{' '}\n          ：提醒消息类型风格的按钮\n        </li>\n      </ul>\n\n      <div className=\"solt-demos\">\n        <div className=\"demo-box\">\n          <h3>5种状态基础使用</h3>\n\n          <div className=\"demo\">\n            <TYEP />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以通过\n              <code>\n                <span className=\"hljs-keyword\">type</span>\n              </code>\n              属性控制按钮风格，具有五个可选属性：\n              <code>\n                <span className=\"hljs-attribute\">primary</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">warn</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">error</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">link</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">pop</span>\n              </code>{' '}\n              ，默认为\n              <code>\n                <span className=\"hljs-attribute\">primary</span>\n              </code>\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n\n  return (\n    <>\n      <Button type=\"primary\">向日葵妈妈UI</Button>\n      <Button type=\"warn\">向日葵妈妈UI</Button>\n      <Button type=\"error\">向日葵妈妈UI</Button>\n      <Button type=\"link\">向日葵妈妈UI</Button>\n      <Button type=\"pop\">向日葵妈妈UI</Button>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setTYEP(!_TYEP)}\n                />\n              </Tooltip>\n            </div>\n            {_TYEP && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;primary&quot;</span>&gt;</span>向日葵妈妈UI<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;warn&quot;</span>&gt;</span>向日葵妈妈UI<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;error&quot;</span>&gt;</span>向日葵妈妈UI<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;link&quot;</span>&gt;</span>向日葵妈妈UI<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;pop&quot;</span>&gt;</span>向日葵妈妈UI<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>多达6种的按钮大小</h3>\n\n          <div className=\"demo\">\n            <SIZE />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以通过<code>size</code>属性控制按钮风格，具有五个可选属性：\n              <code>max</code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">big</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">large</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">middle</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">small</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">mini</span>\n              </code>{' '}\n              ，默认为\n              <code>\n                <span className=\"hljs-keyword\">middle</span>\n              </code>\n              。\n            </p>\n            <ul>\n              <li>\n                <code>max</code>：一个顶级最大的按钮\n              </li>\n              <li>\n                <code>\n                  <span className=\"hljs-attribute\">big</span>\n                </code>\n                ：一个超大的按钮\n              </li>\n              <li>\n                <code>\n                  <span className=\"hljs-attribute\">large</span>\n                </code>\n                ：一个大大的按钮\n              </li>\n              <li>\n                <code>\n                  <span className=\"hljs-keyword\">middle</span>\n                </code>\n                ：中等大小的按钮，默认是这个\n              </li>\n              <li>\n                <code>\n                  <span className=\"hljs-keyword\">small</span>\n                </code>\n                ：比较小的按钮\n              </li>\n              <li>\n                <code>\n                  <span className=\"hljs-attribute\">mini</span>\n                </code>\n                ：迷你大小的按钮\n              </li>\n            </ul>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n\n  return (\n    <>\n      <Button size=\"max\">max</Button>\n      <Button size=\"big\">big</Button>\n      <Button size=\"large\">large</Button>\n      <Button size=\"middle\">middle</Button>\n      <Button size=\"small\">small</Button>\n      <Button size=\"mini\">mini</Button>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setSIZE(!_SIZE)}\n                />\n              </Tooltip>\n            </div>\n            {_SIZE && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&quot;max&quot;</span>&gt;</span>max<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&quot;big&quot;</span>&gt;</span>big<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&quot;large&quot;</span>&gt;</span>large<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&quot;middle&quot;</span>&gt;</span>middle<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&quot;small&quot;</span>&gt;</span>small<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&quot;mini&quot;</span>&gt;</span>mini<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>将按钮宽度调整为其父宽度</h3>\n\n          <div className=\"demo\">\n            <BLOCK />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以通过\n              <code>\n                <span className=\"hljs-attribute\">block</span>\n              </code>\n              属性将按钮铺满整个父级\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n\n  return (<Button block >向日葵妈妈UI</Button>)\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setBLOCK(!_BLOCK)}\n                />\n              </Tooltip>\n            </div>\n            {_BLOCK && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n\n  <span class=\"hljs-keyword\">return</span> (<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">block</span> &gt;</span>向日葵妈妈UI<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span>)\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>Click 和 disabled</h3>\n          <p>点击事件和禁用按钮</p>\n\n          <div className=\"demo\">\n            <CLICK />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以通过\n              <code>\n                <span className=\"hljs-attribute\">onClick</span>\n              </code>\n              来监听按钮的点击事件，\n              <code>\n                <span className=\"hljs-attribute\">disabled</span>\n              </code>\n              为\n              <code>\n                <span className=\"hljs-literal\">true</span>\n              </code>\n              可以将按钮禁用。\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n\n  const click = () => alert('点击了按钮')\n\n  return (\n    <>\n      <Button onClick={click}>可点击的</Button>\n      <Button onClick={click} disabled>禁用的</Button>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setCLICK(!_CLICK)}\n                />\n              </Tooltip>\n            </div>\n            {_CLICK && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n\n  <span class=\"hljs-keyword\">const</span> click = <span class=\"hljs-function\">() =&gt;</span> alert(<span class=\"hljs-string\">&#x27;点击了按钮&#x27;</span>)\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{click}</span>&gt;</span>可点击的<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{click}</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>禁用的<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>ghost</h3>\n          <p>镂空的幽灵风格按钮</p>\n\n          <div className=\"demo\">\n            <GHOST />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以通过\n              <code>\n                <span className=\"hljs-attribute\">ghost</span>\n              </code>\n              属性来开启镂空的按钮风格，默认为不开启\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n\n  return (\n    <>\n      <Button type=\"primary\" ghost >primary</Button>\n      <Button type=\"warn\" ghost >warn</Button>\n      <Button type=\"error\" ghost >error</Button>\n      <Button type=\"link\" ghost >link</Button>\n      <Button type=\"pop\" ghost >pop</Button>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setGHOST(!_GHOST)}\n                />\n              </Tooltip>\n            </div>\n            {_GHOST && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;primary&quot;</span> <span class=\"hljs-attr\">ghost</span> &gt;</span>primary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;warn&quot;</span> <span class=\"hljs-attr\">ghost</span> &gt;</span>warn<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;error&quot;</span> <span class=\"hljs-attr\">ghost</span> &gt;</span>error<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;link&quot;</span> <span class=\"hljs-attr\">ghost</span> &gt;</span>link<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;pop&quot;</span> <span class=\"hljs-attr\">ghost</span> &gt;</span>pop<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>icon</h3>\n          <p>图标按钮</p>\n\n          <div className=\"demo\">\n            <ICON />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以通过\n              <code>\n                <span className=\"hljs-attribute\">icon</span>\n              </code>\n              属性来传入图标组件实现图标按钮\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button, Icon } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n\n  return (\n    <>\n      <Button type=\"primary\" icon={<Icon name=\"service\" />} />\n      <Button type=\"warn\" icon={<Icon name=\"add\" />} />\n      <Button type=\"error\" icon={<Icon name=\"collected\" />} />\n      <Button type=\"link\" icon={<Icon name=\"set\" />} />\n      <Button type=\"pop\" icon={<Icon name=\"menu\" />} />\n      <Button type=\"primary\" icon={<Icon name=\"service\" />} >联系客服</Button>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setICON(!_ICON)}\n                />\n              </Tooltip>\n            </div>\n            {_ICON && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button, Icon } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;primary&quot;</span> <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;service&quot;</span> /&gt;</span>} /&gt;\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;warn&quot;</span> <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;add&quot;</span> /&gt;</span>} /&gt;\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;error&quot;</span> <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;collected&quot;</span> /&gt;</span>} /&gt;\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;link&quot;</span> <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;set&quot;</span> /&gt;</span>} /&gt;\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;pop&quot;</span> <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;menu&quot;</span> /&gt;</span>} /&gt;\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;primary&quot;</span> <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;service&quot;</span> /&gt;</span>} &gt;联系客服<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n      </div>\n      <h2>Props</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>type</td>\n            <td>否</td>\n            <td>按钮风格类型</td>\n            <td>\n              <code>\n                <span className=\"hljs-attribute\">primary</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">warn</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">error</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">link</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">pop</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-attribute\">primary</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>size</td>\n            <td>否</td>\n            <td>按钮大小</td>\n            <td>\n              <code>max</code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">big</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">large</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">middle</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">small</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">mini</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-keyword\">middle</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>icon</td>\n            <td>否</td>\n            <td>按钮的图标</td>\n            <td>\n              <code>React.ReactNode</code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">null</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>block</td>\n            <td>否</td>\n            <td>将按钮宽度调整为其父宽度的选项</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>ghost</td>\n            <td>否</td>\n            <td>镂空风格</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>disabled</td>\n            <td>否</td>\n            <td>是否禁用</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h1>Event</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>事件名称</th>\n            <th>说明</th>\n            <th>参数</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>onClick</td>\n            <td>点击事件</td>\n            <td>null</td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default Pgae\n","import { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <>\n      <Button onClick={() => Toast.show('通过字符串弹一个轻提示')}>\n        通过字符串唤起\n      </Button>\n      <Button onClick={() => Toast.show(new Date().toString())} type=\"error\">\n        连续点击可唤起多个哦\n      </Button>\n    </>\n  )\n}\n\nexport default Demo\n","import { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const onClick = () => {\n    Toast.show({\n      title: '我是通过配置唤起的，我5秒才消失',\n      duration: 5000,\n    })\n  }\n\n  return <Button onClick={onClick}>通过配置唤起轻提示</Button>\n}\n\nexport default Demo\n","import { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const onClick = () => {\n    Toast.show({\n      title: '我是通过配置唤起的，我5秒才消失',\n      icon: 'success',\n    })\n  }\n\n  return <Button onClick={onClick}>带有成功的图标</Button>\n}\n\nexport default Demo\n","import { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const onClick = () => {\n    Toast.show({\n      title: '愤怒的小鸟！！',\n      image:\n        'https://img1.baidu.com/it/u=3563879038,322783869&fm=26&fmt=auto&gp=0.jpg',\n    })\n  }\n\n  return <Button onClick={onClick}>自定义图标</Button>\n}\n\nexport default Demo\n","import { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const onClick = () => {\n    Toast.show({\n      title: '我是不可操作的toast',\n      mask: true,\n    })\n  }\n\n  return <Button onClick={onClick}>我是不可操作的toast</Button>\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  const onClick = () => {\n    Toast.show({\n      title: '10秒的taost',\n      duration: 10000,\n      success: () => setShow(true),\n    })\n  }\n\n  const onHide = () => {\n    Toast.hide()\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={onClick}>10秒的taost</Button>\n      <Button onClick={onHide} disabled={!show}>\n        隐藏toast\n      </Button>\n    </>\n  )\n}\n\nexport default Demo\n","/* eslint-disabled */\n//\nimport { useState } from 'react'\nimport { Divider, Tooltip, Button } from 'antd'\nimport { CodeSandboxOutlined, CopyOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport BASIS from './demo/BASIS'\nimport QUEUE from './demo/QUEUE'\nimport ICON from './demo/ICON'\nimport IMG from './demo/IMG'\nimport MASK from './demo/MASK'\nimport SUCESS from './demo/SUCESS'\n\nconst Pgae: React.FC = () => {\n  const [_BASIS, _setBASIS] = useState(false)\n  const [_QUEUE, _setQUEUE] = useState(false)\n  const [_ICON, _setICON] = useState(false)\n  const [_IMG, _setIMG] = useState(false)\n  const [_MASK, _setMASK] = useState(false)\n  const [_SUCESS, _setSUCESS] = useState(false)\n\n  return (\n    <>\n      <h1>轻提示 Toast</h1>\n      <blockquote>\n        <p>全局展示操作反馈信息组件。通过API唤起更加方便</p>\n      </blockquote>\n      <h3>什么时候使用</h3>\n      <ul>\n        <li>可提供成功、警告和错误等反馈信息。</li>\n        <li>居中显示并自动消失，是一种不打断用户操作的轻量级提示方式。</li>\n      </ul>\n      <h3>\b微信端特性</h3>\n      <ul>\n        <li>使用方式和微信原生一致</li>\n      </ul>\n      <h3>H5端特性</h3>\n      <ul>\n        <li>具有栈堆队列显示</li>\n      </ul>\n\n      <div className=\"solt-demos\">\n        <div className=\"demo-box\">\n          <h3>代码演示</h3>\n\n          <div className=\"demo\">\n            <BASIS />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              唤起toast可以有两种方式，一种是直接传入字符串参数，其他配置使用默认值。另一种是传入\n              <code>\n                <span className=\"hljs-keyword\">Option</span>\n              </code>\n              配置。\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n\n  return (\n    <>\n      <Button onClick={() => Toast.show('通过字符串弹一个轻提示')}>\n        通过字符串唤起\n      </Button>\n      <Button onClick={() => Toast.show(new Date().toString())} type=\"error\">\n        连续点击可唤起多个哦\n      </Button>\n    </>\n    )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setBASIS(!_BASIS)}\n                />\n              </Tooltip>\n            </div>\n            {_BASIS && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button, Toast } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> Toast.show(&#x27;通过字符串弹一个轻提示&#x27;)}&gt;\n        通过字符串唤起\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> Toast.show(new Date().toString())} type=&quot;error&quot;&gt;\n        连续点击可唤起多个哦\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n    )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>通过Options唤起</h3>\n\n          <div className=\"demo\">\n            <QUEUE />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              通过\n              <code>\n                <span className=\"hljs-keyword\">Option</span>\n              </code>\n              灵活配置toast。\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const onClick = () => {\n    Toast.show({\n      title: '我是通过配置唤起的，我5秒才消失',\n      duration: 5000\n    })\n  }\n\n  return (\n    <Button onClick={onClick}>通过配置唤起轻提示</Button>)\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setQUEUE(!_QUEUE)}\n                />\n              </Tooltip>\n            </div>\n            {_QUEUE && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button, Toast } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> {\n    Toast.show({\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;我是通过配置唤起的，我5秒才消失&#x27;</span>,\n      <span class=\"hljs-attr\">duration</span>: <span class=\"hljs-number\">5000</span>\n    })\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onClick}</span>&gt;</span>通过配置唤起轻提示<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span>)\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>具有图标的toast</h3>\n\n          <div className=\"demo\">\n            <ICON />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-module-access\">\n                  <span className=\"hljs-module\">\n                    <span className=\"hljs-identifier\">Option</span>.\n                  </span>\n                </span>\n                icon\n              </code>{' '}\n              可以配置一个图标toast\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const onClick = () => {\n    Toast.show({\n      title: '我是通过配置唤起的，我5秒才消失',\n      icon: 'success'\n    })\n  }\n\n  return (\n    <Button onClick={onClick}>带有成功的图标</Button>)\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setICON(!_ICON)}\n                />\n              </Tooltip>\n            </div>\n            {_ICON && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button, Toast } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> {\n    Toast.show({\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;我是通过配置唤起的，我5秒才消失&#x27;</span>,\n      <span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\">&#x27;success&#x27;</span>\n    })\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onClick}</span>&gt;</span>带有成功的图标<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span>)\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>自定义图标的toast</h3>\n\n          <div className=\"demo\">\n            <IMG />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              通过\n              <code>\n                <span className=\"hljs-module-access\">\n                  <span className=\"hljs-module\">\n                    <span className=\"hljs-identifier\">Option</span>.\n                  </span>\n                </span>\n                image\n              </code>\n              选项传入图片路径自定义图标，\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const onClick = () => {\n    Toast.show({\n      title: '愤怒的小鸟！！',\n      image: 'https://img1.baidu.com/it/u=3563879038,322783869&fm=26&fmt=auto&gp=0.jpg'\n    })\n  }\n\n  return (\n    <Button onClick={onClick}>自定义图标</Button>)\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setIMG(!_IMG)}\n                />\n              </Tooltip>\n            </div>\n            {_IMG && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button, Toast } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> {\n    Toast.show({\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;愤怒的小鸟！！&#x27;</span>,\n      <span class=\"hljs-attr\">image</span>: <span class=\"hljs-string\">&#x27;https://img1.baidu.com/it/u=3563879038,322783869&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#x27;</span>\n    })\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onClick}</span>&gt;</span>自定义图标<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span>)\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>不可操作toast</h3>\n\n          <div className=\"demo\">\n            <MASK />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              通过\n              <code>\n                <span className=\"hljs-module-access\">\n                  <span className=\"hljs-module\">\n                    <span className=\"hljs-identifier\">Option</span>.\n                  </span>\n                </span>\n                mask\n              </code>\n              出现屏障，让用户在toast期间不可操作\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const onClick = () => {\n    Toast.show({\n      title: '我是不可操作的toast',\n      mask: true\n    })\n  }\n\n  return (\n    <Button onClick={onClick}>我是不可操作的toast</Button>)\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setMASK(!_MASK)}\n                />\n              </Tooltip>\n            </div>\n            {_MASK && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Button, Toast } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> {\n    Toast.show({\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;我是不可操作的toast&#x27;</span>,\n      <span class=\"hljs-attr\">mask</span>: <span class=\"hljs-literal\">true</span>\n    })\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onClick}</span>&gt;</span>我是不可操作的toast<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span>)\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>通过API关闭taost</h3>\n\n          <div className=\"demo\">\n            <SUCESS />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              通过\n              <code>\n                <span className=\"hljs-module-access\">\n                  <span className=\"hljs-module\">\n                    <span className=\"hljs-identifier\">Option</span>.\n                  </span>\n                </span>\n                success\n              </code>\n              回调可以知道toast是否显示，并且可以通过{' '}\n              <code>\n                <span className=\"hljs-module-access\">\n                  <span className=\"hljs-module\">\n                    <span className=\"hljs-identifier\">Toasr</span>.\n                  </span>\n                </span>\n                hide<span className=\"hljs-literal\">()</span>\n              </code>{' '}\n              关闭所有{' '}\n              <code>\n                <span className=\"hljs-attribute\">taost</span>\n              </code>\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Button, Toast } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  const onClick = () => {\n    Toast.show({\n      title: '10秒的taost',\n      duration: 10000,\n      success: () => setShow(true)\n    })\n  }\n\n  const onHide = () => {\n    Toast.hide()\n    setShow(false)\n  }\n\n  return (\n    <>\n      <Button onClick={onClick}>10秒的taost</Button>\n      <Button onClick={onHide} disabled={!show}>隐藏toast</Button>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setSUCESS(!_SUCESS)}\n                />\n              </Tooltip>\n            </div>\n            {_SUCESS && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Button, Toast } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> {\n    Toast.show({\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;10秒的taost&#x27;</span>,\n      <span class=\"hljs-attr\">duration</span>: <span class=\"hljs-number\">10000</span>,\n      <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\">() =&gt;</span> setShow(<span class=\"hljs-literal\">true</span>)\n    })\n  }\n\n  <span class=\"hljs-keyword\">const</span> onHide = <span class=\"hljs-function\">() =&gt;</span> {\n    Toast.hide()\n    setShow(<span class=\"hljs-literal\">false</span>)\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onClick}</span>&gt;</span>10秒的taost<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onHide}</span> <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{!show}</span>&gt;</span>隐藏toast<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n      </div>\n      <h2>API</h2>\n      <ul>\n        <li>\n          <code>\n            <span className=\"hljs-keyword\">show</span>(\n            <span className=\"hljs-keyword\">option</span>:{' '}\n            <span className=\"hljs-keyword\">Option</span>):{' '}\n            <span className=\"hljs-type\">void</span>\n          </code>{' '}\n          唤起taost\n        </li>\n        <li>\n          <code>\n            <span className=\"hljs-function\">\n              <span className=\"hljs-title\">hide</span>\n              <span className=\"hljs-params\">()</span>\n            </span>\n            : void\n          </code>{' '}\n          隐藏toast，并清除队列中的toast\n        </li>\n      </ul>\n      <h2>Option 参数说明</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>title</td>\n            <td>是</td>\n            <td>提示的内容</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>image</td>\n            <td>否</td>\n            <td>\n              自定义图标的本地路径，<code>image</code> 的优先级高于{' '}\n              <code>\n                <span className=\"hljs-attribute\">icon</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">null</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>icon</td>\n            <td>否</td>\n            <td>\n              图标,可选{' '}\n              <code>\n                <span className=\"hljs-attribute\">success</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">loading</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">none</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-attribute\">none</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>mask</td>\n            <td>否</td>\n            <td>是否显示透明蒙层，防止触摸穿透</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>duration</td>\n            <td>否</td>\n            <td>提示的延迟时间,单位 ms</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">number</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-number\">2000</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>success</td>\n            <td>否</td>\n            <td>接口调用成功的回调函数</td>\n            <td>\n              <code>\n                () =&gt; <span className=\"hljs-keyword\">void</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>fail</td>\n            <td>否</td>\n            <td>接口调用失败的回调函数</td>\n            <td>\n              <code>\n                () =&gt; <span className=\"hljs-keyword\">void</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default Pgae\n","import { useState } from 'react'\nimport { Empty } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return <Empty />\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Empty } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return <Empty text=\"暂无数据哦～\" />\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Empty, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <Empty>\n      <Button>返回首页</Button>\n    </Empty>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Empty } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return <Empty text=\"暂无数据哦～\" src={Empty.PRESENTED_IMAGE_SIMPLE} />\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Empty } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <>\n      <Empty size=\"large\" />\n      <Empty />\n      <Empty size=\"small\" />\n    </>\n  )\n}\n\nexport default Demo\n","/* eslint-disabled */\n//\nimport { useState } from 'react'\nimport { Divider, Tooltip, Button } from 'antd'\nimport { CodeSandboxOutlined, CopyOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport BASIS from './demo/BASIS'\nimport TEXT from './demo/TEXT'\nimport CHILDREN from './demo/CHILDREN'\nimport SRC from './demo/SRC'\nimport SIZE from './demo/SIZE'\n\nconst Pgae: React.FC = () => {\n  const [_BASIS, _setBASIS] = useState(false)\n  const [_TEXT, _setTEXT] = useState(false)\n  const [_CHILDREN, _setCHILDREN] = useState(false)\n  const [_SRC, _setSRC] = useState(false)\n  const [_SIZE, _setSIZE] = useState(false)\n\n  return (\n    <>\n      <h1>空状态 Empty</h1>\n      <blockquote>\n        <p>空状态时的展示占位图。</p>\n      </blockquote>\n      <h3>什么时候使用</h3>\n      <ul>\n        <li>当目前没有数据时，用于显式的用户提示。</li>\n        <li>初始化场景时的引导创建流程。</li>\n      </ul>\n\n      <div className=\"solt-demos\">\n        <div className=\"demo-box\">\n          <h3>代码演示</h3>\n\n          <div className=\"demo\">\n            <BASIS />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              直接使用\n              <code>\n                <span className=\"hljs-attribute\">Empty</span>\n              </code>\n              组件\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Empty } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <Empty />\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setBASIS(!_BASIS)}\n                />\n              </Tooltip>\n            </div>\n            {_BASIS && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Empty } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Empty</span> /&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>说明文字</h3>\n\n          <div className=\"demo\">\n            <TEXT />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-built_in\">text</span>\n              </code>\n              属性可以设置空状态的提示语\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Empty } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <Empty text=\"暂无数据哦～\" />\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setTEXT(!_TEXT)}\n                />\n              </Tooltip>\n            </div>\n            {_TEXT && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Empty } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Empty</span> <span class=\"hljs-attr\">text</span>=<span class=\"hljs-string\">&quot;暂无数据哦～&quot;</span> /&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>自定义子节点</h3>\n\n          <div className=\"demo\">\n            <CHILDREN />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以通过\n              <code>\n                <span className=\"hljs-attribute\">children</span>\n              </code>\n              插入子节点的内容\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Empty, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <Empty>\n      <Button>返回首页</Button>\n    </Empty>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setCHILDREN(!_CHILDREN)}\n                />\n              </Tooltip>\n            </div>\n            {_CHILDREN && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Empty, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Empty</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>返回首页<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Empty</span>&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>使用其他的缺省图</h3>\n\n          <div className=\"demo\">\n            <SRC />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-attribute\">src</span>\n              </code>\n              属性可以自定义缺省图，也可以使用\n              <code>\n                <span className=\"hljs-attribute\">Empty</span>\n              </code>\n              组件提供了4种状态图。分别为{' '}\n              <code>\n                <span className=\"hljs-built_in\">Empty</span>\n                <span className=\"hljs-operator\">.</span>\n                <span className=\"hljs-type\">PRESENTED_IMAGE</span>\n                <span className=\"hljs-type\">_DEFAULT</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">Empty</span>\n                <span className=\"hljs-operator\">.</span>\n                <span className=\"hljs-type\">PRESENTED_IMAGE</span>\n                <span className=\"hljs-type\">_SIMPLE</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">Empty</span>\n                <span className=\"hljs-operator\">.</span>\n                <span className=\"hljs-type\">PRESENTED_IMAGE</span>\n                <span className=\"hljs-type\">_HAPPY</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">Empty</span>\n                <span className=\"hljs-operator\">.</span>\n                <span className=\"hljs-type\">PRESENTED_IMAGE</span>\n                <span className=\"hljs-type\">_ERROR</span>\n              </code>\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Empty } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <Empty text=\"暂无数据哦～\" src={Empty.PRESENTED_IMAGE_SIMPLE} />\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setSRC(!_SRC)}\n                />\n              </Tooltip>\n            </div>\n            {_SRC && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Empty } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Empty</span> <span class=\"hljs-attr\">text</span>=<span class=\"hljs-string\">&quot;暂无数据哦～&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">{Empty.PRESENTED_IMAGE_SIMPLE}</span> /&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>三种大小</h3>\n\n          <div className=\"demo\">\n            <SIZE />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以通过<code>size</code>属性设置组件的大小\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Empty } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <>\n      <Empty size=\"large\" />\n      <Empty  />\n      <Empty size=\"small\" />\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setSIZE(!_SIZE)}\n                />\n              </Tooltip>\n            </div>\n            {_SIZE && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Empty } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Empty</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&quot;large&quot;</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Empty</span>  /&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Empty</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&quot;small&quot;</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n      </div>\n      <h2>Props</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>src</td>\n            <td>否</td>\n            <td>自定义缺省图片地址</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">Empty</span>\n                <span className=\"hljs-operator\">.</span>\n                <span className=\"hljs-type\">PRESENTED_IMAGE</span>\n                <span className=\"hljs-type\">_DEFAULT</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>size</td>\n            <td>否</td>\n            <td>大小</td>\n            <td>\n              <code>\n                <span className=\"hljs-attribute\">large</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">middle</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-keyword\">small</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-keyword\">middle</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>text</td>\n            <td>否</td>\n            <td>自定义描述内容</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>wrapperTop</td>\n            <td>否</td>\n            <td>顶部间距</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">number</span>\n              </code>\n            </td>\n            <td>\n              <code>30px</code>\n            </td>\n          </tr>\n          <tr>\n            <td>wrapperBottom</td>\n            <td>否</td>\n            <td>底部间距</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">number</span>\n              </code>\n            </td>\n            <td>\n              <code>30px</code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h2>内置图片</h2>\n      <ul>\n        <li>\n          <code>\n            <span className=\"hljs-built_in\">Empty</span>\n            <span className=\"hljs-operator\">.</span>\n            <span className=\"hljs-type\">PRESENTED_IMAGE</span>\n            <span className=\"hljs-type\">_DEFAULT</span>\n          </code>\n        </li>\n      </ul>\n      <img\n        src=\"https://assets.xrkmm.cn/u/4000002499670412/fec0810a-501e-4875-9a7e-0e152681ae21.png\"\n        className=\"img-box\"\n      />\n      <br />\n      <ul>\n        <li>\n          <code>\n            <span className=\"hljs-built_in\">Empty</span>\n            <span className=\"hljs-operator\">.</span>\n            <span className=\"hljs-type\">PRESENTED_IMAGE</span>\n            <span className=\"hljs-type\">_SIMPLE</span>\n          </code>\n        </li>\n      </ul>\n      <img\n        src=\"https://assets.xrkmm.cn/u/4000002499670412/1b3b6895-9a51-4e4c-a4fd-b3878dbe987e.png\"\n        className=\"img-box\"\n      />\n      <br />\n      <ul>\n        <li>\n          <code>\n            <span className=\"hljs-built_in\">Empty</span>\n            <span className=\"hljs-operator\">.</span>\n            <span className=\"hljs-type\">PRESENTED_IMAGE</span>\n            <span className=\"hljs-type\">_HAPPY</span>\n          </code>\n        </li>\n      </ul>\n      <img\n        src=\"https://assets.xrkmm.cn/u/4000002499670412/8bc1ba9b-b71d-4b77-bc86-1fd2a2f7b026.png\"\n        className=\"img-box\"\n      />\n      <br />\n      <ul>\n        <li>\n          <code>\n            <span className=\"hljs-built_in\">Empty</span>\n            <span className=\"hljs-operator\">.</span>\n            <span className=\"hljs-type\">PRESENTED_IMAGE</span>\n            <span className=\"hljs-type\">_ERROR</span>\n          </code>\n        </li>\n      </ul>\n      <img\n        src=\"https://assets.xrkmm.cn/u/4000002499670412/99bc2c9f-eba2-4295-8de4-3d8f52862cf6.png\"\n        className=\"img-box\"\n      />\n    </>\n  )\n}\n\nexport default Pgae\n","import { useState } from 'react'\nimport { showModal, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <Button\n      onClick={() => {\n        showModal({ title: 'API 唤起 Modal' })\n          .then(console.log)\n          .catch(console.error)\n      }}\n    >\n      API 唤起 Modal\n    </Button>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Modal, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>JSX使用模态框</Button>\n      <Modal\n        visible={show}\n        title=\"这是标题\"\n        content=\"这是文案这是文案这是文案这是文案\"\n        button={[{ text: '取消', style: 'cancel' }, { text: '确定' }]}\n        onButtonClick={() => setShow(false)}\n      />\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Modal, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [idnex, setIndex] = useState(0)\n  const [show, setShow] = useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>多个按钮的弹窗 {idnex}</Button>\n      <Modal\n        visible={show}\n        title=\"这是标题\"\n        content=\"这是文案这是文案这是文案这是文案\"\n        button={[\n          { text: '取消', style: 'cancel' },\n          { text: '继续观看', style: 'cancel' },\n          { text: '确定' },\n        ]}\n        onButtonClick={(index) => {\n          setIndex(index)\n          setShow(false)\n        }}\n      />\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Modal, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>button 的 click 事件</Button>\n      <Modal\n        visible={show}\n        title=\"这是标题\"\n        content=\"这是文案这是文案这是文案这是文案\"\n        button={[\n          { text: '取消', style: 'cancel', onClick: () => setShow(false) },\n          { text: '继续观看' },\n          { text: '确定', onClick: () => setShow(false) },\n        ]}\n      />\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Modal, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)}>JSX使用模态框</Button>\n      <Modal\n        visible={show}\n        title=\"这是标题\"\n        button={[{ text: '取消', style: 'cancel' }, { text: '确定' }]}\n        onButtonClick={() => setShow(false)}\n      >\n        这是文案这是文案这是文案这是文案\n      </Modal>\n    </>\n  )\n}\n\nexport default Demo\n","/* eslint-disabled */\n//\nimport { useState } from 'react'\nimport { Divider, Tooltip, Button } from 'antd'\nimport { CodeSandboxOutlined, CopyOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport API from './demo/API'\nimport BASIS from './demo/BASIS'\nimport MULTI from './demo/MULTI'\nimport BUTTONCLICK from './demo/BUTTONCLICK'\nimport CHILDREN from './demo/CHILDREN'\n\nconst Pgae: React.FC = () => {\n  const [_API, _setAPI] = useState(false)\n  const [_BASIS, _setBASIS] = useState(false)\n  const [_MULTI, _setMULTI] = useState(false)\n  const [_BUTTONCLICK, _setBUTTONCLICK] = useState(false)\n  const [_CHILDREN, _setCHILDREN] = useState(false)\n\n  return (\n    <>\n      <h1>模态对话框 Modal</h1>\n      <blockquote>\n        <p>\n          从底部弹出的模态框，提供\n          <code>\n            <span className=\"hljs-attribute\">API</span>\n          </code>\n          唤起，也支持<code>JSX方</code>\n          式使用，也支持提供标题和描述。内置固定的展示样式。也支持插入子节点定制操作板内容。\n        </p>\n      </blockquote>\n      <h3>什么时候使用</h3>\n      <p>\n        需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal\n        在当前页面正中打开一个浮层，承载相应的操作。\n        另外当需要一个简洁的确认框询问用户时，可以使用{' '}\n        <code>\n          <span className=\"hljs-function\">\n            <span className=\"hljs-title\">showModal</span>\n            <span className=\"hljs-params\">()</span>\n          </span>\n        </code>{' '}\n        等语法糖方法。\n      </p>\n      <div className=\"solt-demos\">\n        <div className=\"demo-box\">\n          <h3>API 方式调用</h3>\n\n          <div className=\"demo\">\n            <API />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              可以直接通过 API 唤起{' '}\n              <code>\n                <span className=\"hljs-attribute\">Modal</span>\n              </code>{' '}\n              。对于比较简单的场景可以直接使用此方式。API 返回一个\n              <code>\n                <span className=\"hljs-built_in\">Promise</span>\n              </code>\n              对象。用户选择会执行{' '}\n              <code>\n                <span className=\"hljs-attribute\">then</span>\n              </code>\n              。失败执行\n              <code>\n                <span className=\"hljs-keyword\">catch</span>\n              </code>\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from \"react\";\nimport { showModal, Button } from \"@xrkmm/ui-h5\";\n\nconst Demo: React.FC = () => {\n  return (\n    <Button\n      onClick={() => {\n        showModal({ title: \"API 唤起 Modal\" })\n          .then(console.log)\n          .catch(console.error);\n      }}\n    >\n      API 唤起 Modal\n    </Button>\n  );\n};\n\nexport default Demo;\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setAPI(!_API)}\n                />\n              </Tooltip>\n            </div>\n            {_API && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { showModal, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@xrkmm/ui-h5&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>\n      <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> {\n        showModal({ title: &quot;API 唤起 Modal&quot; })\n          .then(console.log)\n          .catch(console.error);\n      }}\n    &gt;\n      API 唤起 Modal\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo;\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>jsx方式使用</h3>\n\n          <div className=\"demo\">\n            <BASIS />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              使用\n              <code>\n                <span className=\"hljs-attribute\">jsx</span>\n              </code>\n              方式开发，可以灵活配置模态框样式和内容\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from \"react\";\nimport { Modal, Button } from \"@xrkmm/ui-h5\";\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)} >\n        JSX使用模态框\n      </Button>\n      <Modal\n        visible={show}\n        title=\"这是标题\"\n        content=\"这是文案这是文案这是文案这是文案\"\n        button={[\n          { text: '取消', style: 'cancel' },\n          { text: '确定' }\n        ]}\n        onButtonClick={() => setShow(false)}\n      />\n    </>\n  );\n};\n\nexport default Demo;\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setBASIS(!_BASIS)}\n                />\n              </Tooltip>\n            </div>\n            {_BASIS && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { Modal, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@xrkmm/ui-h5&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)} &gt;\n        JSX使用模态框\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Modal</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;这是标题&quot;</span>\n        <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;这是文案这是文案这是文案这是文案&quot;</span>\n        <span class=\"hljs-attr\">button</span>=<span class=\"hljs-string\">{[</span>\n          { <span class=\"hljs-attr\">text:</span> &#x27;取消&#x27;, <span class=\"hljs-attr\">style:</span> &#x27;<span class=\"hljs-attr\">cancel</span>&#x27; },\n          { <span class=\"hljs-attr\">text:</span> &#x27;确定&#x27; }\n        ]}\n        <span class=\"hljs-attr\">onButtonClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)}\n      /&gt;\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo;\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>多个按钮弹的模态框</h3>\n\n          <div className=\"demo\">\n            <MULTI />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-selector-tag\">button</span>\n              </code>{' '}\n              是一个按钮对象数组，可以配置多个按钮，无限制。超过两个会换行显示。\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from \"react\";\nimport { Modal, Button } from \"@xrkmm/ui-h5\";\n\nconst Demo: React.FC = () => {\n  const [idnex, setIndex] = useState(0)\n  const [show, setShow] = useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)} >\n        多个按钮的弹窗 {idnex}\n      </Button>\n      <Modal\n        visible={show}\n        title=\"这是标题\"\n        content=\"这是文案这是文案这是文案这是文案\"\n        button={[\n          { text: '取消', style: 'cancel' },\n          { text: '继续观看', style: 'cancel' },\n          { text: '确定' }\n        ]}\n        onButtonClick={(index) => {\n          setIndex(index)\n          setShow(false)\n        }}\n      />\n    </>\n  );\n};\n\nexport default Demo;\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setMULTI(!_MULTI)}\n                />\n              </Tooltip>\n            </div>\n            {_MULTI && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { Modal, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@xrkmm/ui-h5&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [idnex, setIndex] = useState(<span class=\"hljs-number\">0</span>)\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)} &gt;\n        多个按钮的弹窗 {idnex}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Modal</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;这是标题&quot;</span>\n        <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;这是文案这是文案这是文案这是文案&quot;</span>\n        <span class=\"hljs-attr\">button</span>=<span class=\"hljs-string\">{[</span>\n          { <span class=\"hljs-attr\">text:</span> &#x27;取消&#x27;, <span class=\"hljs-attr\">style:</span> &#x27;<span class=\"hljs-attr\">cancel</span>&#x27; },\n          { <span class=\"hljs-attr\">text:</span> &#x27;继续观看&#x27;, <span class=\"hljs-attr\">style:</span> &#x27;<span class=\"hljs-attr\">cancel</span>&#x27; },\n          { <span class=\"hljs-attr\">text:</span> &#x27;确定&#x27; }\n        ]}\n        <span class=\"hljs-attr\">onButtonClick</span>=<span class=\"hljs-string\">{(index)</span> =&gt;</span> {\n          setIndex(index)\n          setShow(false)\n        }}\n      /&gt;\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo;\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>直接使用 button 的 click 事件</h3>\n\n          <div className=\"demo\">\n            <BUTTONCLICK />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              除了\n              <code>\n                <span className=\"hljs-attribute\">onButtonClick</span>\n              </code>\n              可以监听弹窗按钮点击事件，直接在按钮对象中{' '}\n              <code>\n                <span className=\"hljs-attribute\">onClick</span>\n              </code>{' '}\n              也可以监听到弹窗点击事件\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from \"react\";\nimport { Modal, Button } from \"@xrkmm/ui-h5\";\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)} >\n         button 的 click 事件\n      </Button>\n      <Modal\n        visible={show}\n        title=\"这是标题\"\n        content=\"这是文案这是文案这是文案这是文案\"\n        button={[\n          { text: '取消', style: 'cancel', onClick: () => setShow(false) },\n          { text: '继续观看' },\n          { text: '确定', onClick: () => setShow(false) }\n        ]}\n      />\n    </>\n  );\n};\n\nexport default Demo;\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setBUTTONCLICK(!_BUTTONCLICK)}\n                />\n              </Tooltip>\n            </div>\n            {_BUTTONCLICK && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { Modal, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@xrkmm/ui-h5&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)} &gt;\n         button 的 click 事件\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Modal</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;这是标题&quot;</span>\n        <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;这是文案这是文案这是文案这是文案&quot;</span>\n        <span class=\"hljs-attr\">button</span>=<span class=\"hljs-string\">{[</span>\n          { <span class=\"hljs-attr\">text:</span> &#x27;取消&#x27;, <span class=\"hljs-attr\">style:</span> &#x27;<span class=\"hljs-attr\">cancel</span>&#x27;, <span class=\"hljs-attr\">onClick:</span> () =&gt;</span> setShow(false) },\n          { text: &#x27;继续观看&#x27; },\n          { text: &#x27;确定&#x27;, onClick: () =&gt; setShow(false) }\n        ]}\n      /&gt;\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo;\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>直接使用子节点定义内容</h3>\n\n          <div className=\"demo\">\n            <CHILDREN />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>使用子节点方式直接定义模特框内容</p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from \"react\";\nimport { Modal, Button } from \"@xrkmm/ui-h5\";\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setShow(true)} >\n        JSX使用模态框\n      </Button>\n      <Modal\n        visible={show}\n        title=\"这是标题\"\n        button={[\n          { text: '取消', style: 'cancel' },\n          { text: '确定' }\n        ]}\n        onButtonClick={() => setShow(false)}\n      >\n        这是文案这是文案这是文案这是文案\n      </Modal>\n    </>\n  );\n};\n\nexport default Demo;\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setCHILDREN(!_CHILDREN)}\n                />\n              </Tooltip>\n            </div>\n            {_CHILDREN && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { Modal, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@xrkmm/ui-h5&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [show, setShow] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(true)} &gt;\n        JSX使用模态框\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Modal</span>\n        <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span>\n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;这是标题&quot;</span>\n        <span class=\"hljs-attr\">button</span>=<span class=\"hljs-string\">{[</span>\n          { <span class=\"hljs-attr\">text:</span> &#x27;取消&#x27;, <span class=\"hljs-attr\">style:</span> &#x27;<span class=\"hljs-attr\">cancel</span>&#x27; },\n          { <span class=\"hljs-attr\">text:</span> &#x27;确定&#x27; }\n        ]}\n        <span class=\"hljs-attr\">onButtonClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)}\n      &gt;\n        这是文案这是文案这是文案这是文案\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Modal</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo;\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n      </div>\n      <br />\n      ## API - `showModal(option: ModalOption): Promise`\n      通过API唤起模态框。返回一个Promise对象\n      <h5>ModalOption</h5>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>title</td>\n            <td>是</td>\n            <td>提示的标题</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>content</td>\n            <td>否</td>\n            <td>提示的内容</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>cancelText</td>\n            <td>否</td>\n            <td>取消按钮的文字，最多 4 个字符</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td>取消</td>\n          </tr>\n          <tr>\n            <td>confirmText</td>\n            <td>否</td>\n            <td>确认按钮的文字，最多 4 个字符</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td>确定</td>\n          </tr>\n          <tr>\n            <td>showCancel</td>\n            <td>否</td>\n            <td>是否显示取消按钮</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h5>Result</h5>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>说明</th>\n            <th>类型</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>cancel</td>\n            <td>\n              为 true 时，表示用户点击了取消（用于 Android\n              系统区分点击蒙层关闭还是点击取消按钮关闭）\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>confirm</td>\n            <td>为 true 时，表示用户点击了确定按钮 */</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>content</td>\n            <td>否</td>\n            <td>提示的内容</td>\n          </tr>\n          <tr>\n            <td>errMsg</td>\n            <td>回调信息</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h2>ModalProps Props</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>visible</td>\n            <td>是</td>\n            <td>是否显示</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>title</td>\n            <td>否</td>\n            <td>标题</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>button</td>\n            <td>是</td>\n            <td>弹出按钮列表</td>\n            <td>`Array&lt;text: string; style: ‘cancel’</td>\n            <td>‘success’; onClick(): void&gt;`</td>\n          </tr>\n          <tr>\n            <td>maskClosable</td>\n            <td>否</td>\n            <td>点击蒙层是否允许关闭</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">true</span>\n              </code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h1>ActionSheet Event</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>事件名称</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>参数</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>onButtonClick</td>\n            <td>否</td>\n            <td>点击弹出按钮事件</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">index</span>:{' '}\n                <span className=\"hljs-keyword\">number</span>\n              </code>{' '}\n              按钮列表索引\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default Pgae\n","import { useState } from 'react'\nimport { Drawer, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  const onChange = () => setShow(!show)\n\n  return (\n    <>\n      <Button onClick={onChange}>底部出现的抽屉</Button>\n      <Drawer visible={show} onClose={onChange}>\n        <div\n          style={{\n            width: '100%',\n            height: 300,\n            backgroundColor: '#fff',\n            fontSize: 40,\n            textAlign: 'center',\n          }}\n        >\n          向日葵妈妈\n        </div>\n      </Drawer>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Drawer, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n  const [topShow, setTopShow] = useState(false)\n  const [leftShow, setLeftShow] = useState(false)\n  const [rightShow, setRightShow] = useState(false)\n  const [centerShow, setCenterShow] = useState(false)\n\n  const onChange = () => setShow(!show)\n  const onTopChange = () => setTopShow(!topShow)\n  const onLeftChange = () => setLeftShow(!leftShow)\n  const onRightChange = () => setRightShow(!rightShow)\n  const onCenterChange = () => setCenterShow(!centerShow)\n\n  return (\n    <>\n      <Button onClick={onChange}>底部出现的抽屉</Button>\n      <Button onClick={onTopChange} type=\"warn\">\n        顶部出现的抽屉\n      </Button>\n      <Button onClick={onLeftChange} type=\"error\">\n        左边出现的抽屉\n      </Button>\n      <Button onClick={onRightChange} type=\"pop\">\n        右边出现的抽屉\n      </Button>\n      <Button onClick={onCenterChange}>中间出现的抽屉</Button>\n\n      <Drawer visible={show} onClose={onChange} position=\"bottom\">\n        <div\n          style={{\n            width: '100%',\n            height: 300,\n            backgroundColor: '#fff',\n            fontSize: 40,\n            textAlign: 'center',\n          }}\n        >\n          底部弹出的\n        </div>\n      </Drawer>\n      <Drawer visible={topShow} onClose={onTopChange} position=\"top\">\n        <div\n          style={{\n            width: '100%',\n            height: 300,\n            backgroundColor: '#fff',\n            fontSize: 40,\n            textAlign: 'center',\n          }}\n        >\n          顶部弹出的\n        </div>\n      </Drawer>\n      <Drawer visible={leftShow} onClose={onLeftChange} position=\"left\">\n        <div\n          style={{\n            width: 300,\n            height: '100%',\n            backgroundColor: '#fff',\n            fontSize: 40,\n            textAlign: 'center',\n          }}\n        >\n          左边弹出的\n        </div>\n      </Drawer>\n      <Drawer visible={rightShow} onClose={onRightChange} position=\"right\">\n        <div\n          style={{\n            width: 300,\n            height: '100%',\n            backgroundColor: '#fff',\n            fontSize: 40,\n            textAlign: 'center',\n          }}\n        >\n          右边弹出的\n        </div>\n      </Drawer>\n      <Drawer visible={centerShow} onClose={onCenterChange} position=\"center\">\n        <div\n          style={{\n            width: 300,\n            height: 300,\n            backgroundColor: '#fff',\n            fontSize: 40,\n            textAlign: 'center',\n          }}\n        >\n          中间弹出的\n        </div>\n      </Drawer>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Drawer, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  const onChange = () => setShow(!show)\n\n  return (\n    <>\n      <Button onClick={onChange} type=\"error\">\n        没有遮罩层的抽屉{show ? '(隐藏)' : '(弹出)'}\n      </Button>\n      <Drawer visible={show} onClose={onChange} mask={false}>\n        <div\n          style={{\n            width: '100%',\n            height: 300,\n            backgroundColor: '#fff',\n            fontSize: 40,\n            textAlign: 'center',\n            boxShadow: '0px -1px 5px 1px rgba(0, 0, 0, 0.2)',\n          }}\n        >\n          向日葵妈妈\n        </div>\n      </Drawer>\n    </>\n  )\n}\n\nexport default Demo\n","import { useState } from 'react'\nimport { Drawer, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [show, setShow] = useState(false)\n\n  const onChange = () => setShow(!show)\n\n  return (\n    <>\n      <Button onClick={onChange} type=\"error\">\n        禁止点击遮罩层关闭抽屉\n      </Button>\n      <Drawer visible={show} onClose={onChange} maskClosable={false}>\n        <div\n          style={{\n            width: '100%',\n            height: 300,\n            backgroundColor: '#fff',\n            fontSize: 40,\n            textAlign: 'center',\n          }}\n        >\n          向日葵妈妈\n          <Button onClick={() => setShow(false)} type=\"error\">\n            关闭\n          </Button>\n        </div>\n      </Drawer>\n    </>\n  )\n}\n\nexport default Demo\n","/* eslint-disabled */\n//\nimport { useState } from 'react'\nimport { Divider, Tooltip, Button } from 'antd'\nimport { CodeSandboxOutlined, CopyOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport VISIBLE from './demo/VISIBLE'\nimport POSITION from './demo/POSITION'\nimport MASK from './demo/MASK'\nimport MASKCLOSABLE from './demo/MASKCLOSABLE'\n\nconst Pgae: React.FC = () => {\n  const [_VISIBLE, _setVISIBLE] = useState(false)\n  const [_POSITION, _setPOSITION] = useState(false)\n  const [_MASK, _setMASK] = useState(false)\n  const [_MASKCLOSABLE, _setMASKCLOSABLE] = useState(false)\n\n  return (\n    <>\n      <h1>抽屉 Drawer</h1>\n      <blockquote>\n        <p>屏幕边缘滑出的浮层面板。</p>\n      </blockquote>\n      <h3>什么时候使用</h3>\n      <p>\n        抽屉从父窗体边缘滑入，覆盖住部分父窗体内容。用户在抽屉内操作时不必离开当前任务，操作完成后，可以平滑地回到原任务。\n      </p>\n      <ul>\n        <li>\n          自定义{' '}\n          <code>\n            <span className=\"hljs-attribute\">ActionSheet</span>\n          </code>\n          或者\n          <code>\n            <span className=\"hljs-attribute\">Modal</span>\n          </code>\n          时候可以直接使用组件形成\n        </li>\n        <li>\n          当需要一个附加的面板来控制父窗体内容，这个面板在需要时呼出。比如，控制界面展示样式，往界面中添加内容。\n        </li>\n        <li>\n          当需要在当前任务流中插入临时任务，创建或预览附加内容。比如展示协议条款，创建子对象。\n        </li>\n      </ul>\n      <h3>特性</h3>\n      <ul>\n        <li>\n          可以通过<code>position</code>\n          属性灵活控制抽屉弹出的方向是上、下、左、右、中来自定义自己的反馈方式\n        </li>\n      </ul>\n\n      <div className=\"solt-demos\">\n        <div className=\"demo-box\">\n          <h3>代码演示</h3>\n\n          <div className=\"demo\">\n            <VISIBLE />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-attribute\">visible</span>\n              </code>\n              属性控制抽屉组件的展示，抽屉发生关闭事件会回调\n              <code>\n                <span className=\"hljs-attribute\">onClose</span>\n              </code>\n              事件\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Drawer, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [ show, setShow ] = useState(false)\n\n  const onChange = () => setShow(!show)\n\n  return (\n    <>\n      <Button onClick={onChange}>底部出现的抽屉</Button>\n      <Drawer visible={show} onClose={onChange} >\n        <div style={{ width: '100%', height: 300, backgroundColor: '#fff', fontSize: 40, textAlign: 'center' }}>\n          向日葵妈妈\n        </div>\n      </Drawer>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setVISIBLE(!_VISIBLE)}\n                />\n              </Tooltip>\n            </div>\n            {_VISIBLE && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Drawer, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [ show, setShow ] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onChange = <span class=\"hljs-function\">() =&gt;</span> setShow(!show)\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onChange}</span>&gt;</span>底部出现的抽屉<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span> <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{onChange}</span> &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">100</span>%&#x27;, <span class=\"hljs-attr\">height:</span> <span class=\"hljs-attr\">300</span>, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">fff</span>&#x27;, <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span>, <span class=\"hljs-attr\">textAlign:</span> &#x27;<span class=\"hljs-attr\">center</span>&#x27; }}&gt;</span>\n          向日葵妈妈\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>5种不同弹出的方式抽屉</h3>\n\n          <div className=\"demo\">\n            <POSITION />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>position</code>属性控制抽屉组件弹出方式，可选值{' '}\n              <code>\n                <span className=\"hljs-built_in\">left</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">right</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">bottom</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">top</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">center</span>\n              </code>\n              。默认\n              <code>\n                <span className=\"hljs-built_in\">bottom</span>\n              </code>\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Drawer, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [ show, setShow ] = useState(false)\n  const [ topShow, setTopShow ] = useState(false)\n  const [ leftShow, setLeftShow ] = useState(false)\n  const [ rightShow, setRightShow ] = useState(false)\n  const [ centerShow, setCenterShow ] = useState(false)\n\n  const onChange = () => setShow(!show)\n  const onTopChange = () => setTopShow(!topShow)\n  const onLeftChange = () => setLeftShow(!leftShow)\n  const onRightChange = () => setRightShow(!rightShow)\n  const onCenterChange = () => setCenterShow(!centerShow)\n\n  return (\n    <>\n      <Button onClick={onChange}>底部出现的抽屉</Button>\n      <Button onClick={onTopChange} type=\"warn\">顶部出现的抽屉</Button>\n      <Button onClick={onLeftChange} type=\"error\" >左边出现的抽屉</Button>\n      <Button onClick={onRightChange} type=\"pop\" >右边出现的抽屉</Button>\n      <Button onClick={onCenterChange} >中间出现的抽屉</Button>\n\n      <Drawer visible={show} onClose={onChange} position=\"bottom\" >\n        <div style={{ width: '100%', height: 300, backgroundColor: '#fff', fontSize: 40, textAlign: 'center' }}>\n          底部弹出的\n        </div>\n      </Drawer>\n      <Drawer visible={topShow} onClose={onTopChange} position=\"top\" >\n        <div style={{ width: '100%', height: 300, backgroundColor: '#fff', fontSize: 40, textAlign: 'center' }}>\n          顶部弹出的\n        </div>\n      </Drawer>\n      <Drawer visible={leftShow} onClose={onLeftChange} position=\"left\" >\n        <div style={{ width: 300, height: '100%', backgroundColor: '#fff', fontSize: 40, textAlign: 'center' }}>\n          左边弹出的\n        </div>\n      </Drawer>\n      <Drawer visible={rightShow} onClose={onRightChange} position=\"right\" >\n        <div style={{ width: 300, height: '100%', backgroundColor: '#fff', fontSize: 40, textAlign: 'center' }}>\n          右边弹出的\n        </div>\n      </Drawer>\n      <Drawer visible={centerShow} onClose={onCenterChange} position=\"center\" >\n        <div style={{ width: 300, height: 300, backgroundColor: '#fff', fontSize: 40, textAlign: 'center' }}>\n          中间弹出的\n        </div>\n      </Drawer>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setPOSITION(!_POSITION)}\n                />\n              </Tooltip>\n            </div>\n            {_POSITION && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Drawer, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [ show, setShow ] = useState(<span class=\"hljs-literal\">false</span>)\n  <span class=\"hljs-keyword\">const</span> [ topShow, setTopShow ] = useState(<span class=\"hljs-literal\">false</span>)\n  <span class=\"hljs-keyword\">const</span> [ leftShow, setLeftShow ] = useState(<span class=\"hljs-literal\">false</span>)\n  <span class=\"hljs-keyword\">const</span> [ rightShow, setRightShow ] = useState(<span class=\"hljs-literal\">false</span>)\n  <span class=\"hljs-keyword\">const</span> [ centerShow, setCenterShow ] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onChange = <span class=\"hljs-function\">() =&gt;</span> setShow(!show)\n  <span class=\"hljs-keyword\">const</span> onTopChange = <span class=\"hljs-function\">() =&gt;</span> setTopShow(!topShow)\n  <span class=\"hljs-keyword\">const</span> onLeftChange = <span class=\"hljs-function\">() =&gt;</span> setLeftShow(!leftShow)\n  <span class=\"hljs-keyword\">const</span> onRightChange = <span class=\"hljs-function\">() =&gt;</span> setRightShow(!rightShow)\n  <span class=\"hljs-keyword\">const</span> onCenterChange = <span class=\"hljs-function\">() =&gt;</span> setCenterShow(!centerShow)\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onChange}</span>&gt;</span>底部出现的抽屉<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onTopChange}</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;warn&quot;</span>&gt;</span>顶部出现的抽屉<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onLeftChange}</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;error&quot;</span> &gt;</span>左边出现的抽屉<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onRightChange}</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;pop&quot;</span> &gt;</span>右边出现的抽屉<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onCenterChange}</span> &gt;</span>中间出现的抽屉<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span> <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{onChange}</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">&quot;bottom&quot;</span> &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">100</span>%&#x27;, <span class=\"hljs-attr\">height:</span> <span class=\"hljs-attr\">300</span>, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">fff</span>&#x27;, <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span>, <span class=\"hljs-attr\">textAlign:</span> &#x27;<span class=\"hljs-attr\">center</span>&#x27; }}&gt;</span>\n          底部弹出的\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{topShow}</span> <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{onTopChange}</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">&quot;top&quot;</span> &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">100</span>%&#x27;, <span class=\"hljs-attr\">height:</span> <span class=\"hljs-attr\">300</span>, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">fff</span>&#x27;, <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span>, <span class=\"hljs-attr\">textAlign:</span> &#x27;<span class=\"hljs-attr\">center</span>&#x27; }}&gt;</span>\n          顶部弹出的\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{leftShow}</span> <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{onLeftChange}</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">&quot;left&quot;</span> &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> <span class=\"hljs-attr\">300</span>, <span class=\"hljs-attr\">height:</span> &#x27;<span class=\"hljs-attr\">100</span>%&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">fff</span>&#x27;, <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span>, <span class=\"hljs-attr\">textAlign:</span> &#x27;<span class=\"hljs-attr\">center</span>&#x27; }}&gt;</span>\n          左边弹出的\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{rightShow}</span> <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{onRightChange}</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">&quot;right&quot;</span> &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> <span class=\"hljs-attr\">300</span>, <span class=\"hljs-attr\">height:</span> &#x27;<span class=\"hljs-attr\">100</span>%&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">fff</span>&#x27;, <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span>, <span class=\"hljs-attr\">textAlign:</span> &#x27;<span class=\"hljs-attr\">center</span>&#x27; }}&gt;</span>\n          右边弹出的\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{centerShow}</span> <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{onCenterChange}</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">&quot;center&quot;</span> &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> <span class=\"hljs-attr\">300</span>, <span class=\"hljs-attr\">height:</span> <span class=\"hljs-attr\">300</span>, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">fff</span>&#x27;, <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span>, <span class=\"hljs-attr\">textAlign:</span> &#x27;<span class=\"hljs-attr\">center</span>&#x27; }}&gt;</span>\n          中间弹出的\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>隐藏遮罩层</h3>\n\n          <div className=\"demo\">\n            <MASK />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-attribute\">mask</span>\n              </code>\n              属性控制是否用于遮罩层\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Drawer, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [ show, setShow ] = useState(false)\n\n  const onChange = () => setShow(!show)\n\n  return (\n    <>\n      <Button onClick={onChange} type=\"error\" >没有遮罩层的抽屉{show ? '(隐藏)' : '(弹出)'}</Button>\n      <Drawer visible={show} onClose={onChange} mask={false} >\n        <div style={{ width: '100%', height: 300, backgroundColor: '#fff', fontSize: 40, textAlign: 'center', boxShadow: '0px -1px 5px 1px rgba(0, 0, 0, 0.2)' }}>\n          向日葵妈妈\n        </div>\n      </Drawer>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setMASK(!_MASK)}\n                />\n              </Tooltip>\n            </div>\n            {_MASK && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Drawer, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [ show, setShow ] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onChange = <span class=\"hljs-function\">() =&gt;</span> setShow(!show)\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onChange}</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;error&quot;</span> &gt;</span>没有遮罩层的抽屉{show ? &#x27;(隐藏)&#x27; : &#x27;(弹出)&#x27;}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span> <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{onChange}</span> <span class=\"hljs-attr\">mask</span>=<span class=\"hljs-string\">{false}</span> &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">100</span>%&#x27;, <span class=\"hljs-attr\">height:</span> <span class=\"hljs-attr\">300</span>, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">fff</span>&#x27;, <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span>, <span class=\"hljs-attr\">textAlign:</span> &#x27;<span class=\"hljs-attr\">center</span>&#x27;, <span class=\"hljs-attr\">boxShadow:</span> &#x27;<span class=\"hljs-attr\">0px</span> <span class=\"hljs-attr\">-1px</span> <span class=\"hljs-attr\">5px</span> <span class=\"hljs-attr\">1px</span> <span class=\"hljs-attr\">rgba</span>(<span class=\"hljs-attr\">0</span>, <span class=\"hljs-attr\">0</span>, <span class=\"hljs-attr\">0</span>, <span class=\"hljs-attr\">0.2</span>)&#x27; }}&gt;</span>\n          向日葵妈妈\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>隐藏遮罩层</h3>\n\n          <div className=\"demo\">\n            <MASKCLOSABLE />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-attribute\">maskClosable</span>\n              </code>\n              属性控制是否允许遮罩层点击关闭\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { useState } from 'react'\nimport { Drawer, Button } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  const [ show, setShow ] = useState(false)\n\n  const onChange = () => setShow(!show)\n\n  return (\n    <>\n      <Button onClick={onChange} type=\"error\" >禁止点击遮罩层关闭抽屉</Button>\n      <Drawer visible={show} onClose={onChange} maskClosable={false} >\n        <div style={{ width: '100%', height: 300, backgroundColor: '#fff', fontSize: 40, textAlign: 'center'}}>\n          向日葵妈妈\n          <Button onClick={() => setShow(false)} type=\"error\" >关闭</Button>\n        </div>\n      </Drawer>\n    </>\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setMASKCLOSABLE(!_MASKCLOSABLE)}\n                />\n              </Tooltip>\n            </div>\n            {_MASKCLOSABLE && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Drawer, Button } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui-h5&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [ show, setShow ] = useState(<span class=\"hljs-literal\">false</span>)\n\n  <span class=\"hljs-keyword\">const</span> onChange = <span class=\"hljs-function\">() =&gt;</span> setShow(!show)\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onChange}</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;error&quot;</span> &gt;</span>禁止点击遮罩层关闭抽屉<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">visible</span>=<span class=\"hljs-string\">{show}</span> <span class=\"hljs-attr\">onClose</span>=<span class=\"hljs-string\">{onChange}</span> <span class=\"hljs-attr\">maskClosable</span>=<span class=\"hljs-string\">{false}</span> &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">100</span>%&#x27;, <span class=\"hljs-attr\">height:</span> <span class=\"hljs-attr\">300</span>, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">fff</span>&#x27;, <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span>, <span class=\"hljs-attr\">textAlign:</span> &#x27;<span class=\"hljs-attr\">center</span>&#x27;}}&gt;</span>\n          向日葵妈妈\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setShow(false)} type=&quot;error&quot; &gt;关闭<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n      </div>\n      <h2>Props</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>visible</td>\n            <td>是</td>\n            <td>是否显示</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">false</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>position</td>\n            <td>否</td>\n            <td>弹出的方向，可以设置左右上下中间</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">left</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">right</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">bottom</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-built_in\">top</span>\n              </code>{' '}\n              <code>\n                <span className=\"hljs-attribute\">center</span>\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bottom</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>mask</td>\n            <td>否</td>\n            <td>是否显示透明蒙层</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">true</span>\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>maskClosable</td>\n            <td>否</td>\n            <td>点击蒙层是否允许关闭</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">bool</span>ean\n              </code>\n            </td>\n            <td>\n              <code>\n                <span className=\"hljs-literal\">true</span>\n              </code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h1>Event</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>事件名称</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>参数</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>onClose</td>\n            <td>否</td>\n            <td>关闭事件</td>\n            <td>null</td>\n          </tr>\n          <tr>\n            <td>onHide</td>\n            <td>否</td>\n            <td>\n              完全隐藏的回调，慎用，只有组件处于隐藏状态都会触发，不管初始化还是什么状态\n            </td>\n            <td>null</td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default Pgae\n","import './style.scss'\n\nimport { Icon } from '@xrkmm/ui-h5'\n\nconst Demo: React.FC = () => {\n  return (\n    <div>\n      <div className=\"icon-box\">\n        <Icon name=\"add\" />\n        <h5>add</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"bar\" />\n        <h5>bar</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"big-add\" />\n        <h5>big-add</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"big-close\" />\n        <h5>big-close</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"big-right\" />\n        <h5>big-right</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"big-select\" />\n        <h5>big-select</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"check\" />\n        <h5>check</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"checked\" />\n        <h5>checked</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"clear\" />\n        <h5>clear</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"collect\" />\n        <h5>collect</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"collected\" />\n        <h5>collected</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"comment\" />\n        <h5>comment</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"comment2\" />\n        <h5>comment2</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"delete\" />\n        <h5>delete</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"details\" />\n        <h5>details</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"down\" />\n        <h5>down</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"download\" />\n        <h5>download</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"edit\" />\n        <h5>edit</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"fill-right\" />\n        <h5>fill-right</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"fill-select\" />\n        <h5>fill-select</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"filter\" />\n        <h5>filter</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"flows\" />\n        <h5>flows</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"hide\" />\n        <h5>hide</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"img\" />\n        <h5>img</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"like\" />\n        <h5>like</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"liked\" />\n        <h5>liked</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"live\" />\n        <h5>live</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"loading\" />\n        <h5>loading</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"look\" />\n        <h5>look</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"loop\" />\n        <h5>loop</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"menu\" />\n        <h5>menu</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"message\" />\n        <h5>message</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"more-check\" />\n        <h5>more-check</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"more\" />\n        <h5>more</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"notice\" />\n        <h5>notice</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"pause\" />\n        <h5>pause</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"play\" />\n        <h5>play</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"question\" />\n        <h5>question</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"radio\" />\n        <h5>radio</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"radioto\" />\n        <h5>radioto</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"random-play\" />\n        <h5>random-play</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"random\" />\n        <h5>random</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"refresh\" />\n        <h5>refresh</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"remove\" />\n        <h5>remove</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"right\" />\n        <h5>right</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"search\" />\n        <h5>search</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"select\" />\n        <h5>select</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"service\" />\n        <h5>service</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"set\" />\n        <h5>set</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"share\" />\n        <h5>share</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"sort\" />\n        <h5>sort</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"subscribe\" />\n        <h5>subscribe</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"subscribed\" />\n        <h5>subscribed</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"video\" />\n        <h5>video</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default Demo\n","const Demo: React.FC = () => {\n  return <i className=\"xrk-i-service\" style={{ fontSize: 40 }} />\n}\n\nexport default Demo\n","/* eslint-disabled */\n//\nimport { useState } from 'react'\nimport { Divider, Tooltip, Button } from 'antd'\nimport { CodeSandboxOutlined, CopyOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport BASIS from './demo/BASIS'\nimport CLASS from './demo/CLASS'\n\nconst Pgae: React.FC = () => {\n  const [_BASIS, _setBASIS] = useState(false)\n  const [_CLASS, _setCLASS] = useState(false)\n\n  return (\n    <>\n      <h1>图标 Icon</h1>\n      <p>\n        使用图标组件，你需要在引入一个全局的样式文件：\n        <code>\n          <span className=\"hljs-keyword\">import</span>{' '}\n          <span className=\"hljs-string\">\n            &#x27;@xrkmm/ui-h5/icons/style.scss&#x27;\n          </span>\n        </code>\n      </p>\n\n      <div className=\"solt-demos\">\n        <div className=\"demo-box-block\">\n          <h3>代码演示</h3>\n\n          <div className=\"demo\">\n            <BASIS />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              <code>\n                <span className=\"hljs-built_in\">name</span>\n              </code>\n              属性传入图标名称使用图标\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nimport { Icon } from \"@xrkmm/ui-h5\";\n\nconst Demo: React.FC = () => {\n  return (\n    <div>\n      <div className=\"icon-box\">\n        <Icon name=\"add\" />\n        <h5>add</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"bar\" />\n        <h5>bar</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"big-add\" />\n        <h5>big-add</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"big-close\" />\n        <h5>big-close</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"big-right\" />\n        <h5>big-right</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"big-select\" />\n        <h5>big-select</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"check\" />\n        <h5>check</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"checked\" />\n        <h5>checked</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"clear\" />\n        <h5>clear</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"collect\" />\n        <h5>collect</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"collected\" />\n        <h5>collected</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"comment\" />\n        <h5>comment</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"comment2\" />\n        <h5>comment2</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"delete\" />\n        <h5>delete</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"details\" />\n        <h5>details</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"down\" />\n        <h5>down</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"download\" />\n        <h5>download</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"edit\" />\n        <h5>edit</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"fill-right\" />\n        <h5>fill-right</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"fill-select\" />\n        <h5>fill-select</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"filter\" />\n        <h5>filter</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"flows\" />\n        <h5>flows</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"hide\" />\n        <h5>hide</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"img\" />\n        <h5>img</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"like\" />\n        <h5>like</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"liked\" />\n        <h5>liked</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"live\" />\n        <h5>live</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"loading\" />\n        <h5>loading</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"look\" />\n        <h5>look</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"loop\" />\n        <h5>loop</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"menu\" />\n        <h5>menu</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"message\" />\n        <h5>message</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"more-check\" />\n        <h5>more-check</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"more\" />\n        <h5>more</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"notice\" />\n        <h5>notice</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"pause\" />\n        <h5>pause</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"play\" />\n        <h5>play</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"question\" />\n        <h5>question</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"radio\" />\n        <h5>radio</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"radioto\" />\n        <h5>radioto</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"random-play\" />\n        <h5>random-play</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"random\" />\n        <h5>random</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"refresh\" />\n        <h5>refresh</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"remove\" />\n        <h5>remove</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"right\" />\n        <h5>right</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"search\" />\n        <h5>search</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"select\" />\n        <h5>select</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"service\" />\n        <h5>service</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"set\" />\n        <h5>set</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"share\" />\n        <h5>share</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"sort\" />\n        <h5>sort</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"subscribe\" />\n        <h5>subscribe</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"subscribed\" />\n        <h5>subscribed</h5>\n      </div>\n\n      <div className=\"icon-box\">\n        <Icon name=\"video\" />\n        <h5>video</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Demo`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setBASIS(!_BASIS)}\n                />\n              </Tooltip>\n            </div>\n            {_BASIS && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { Icon } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@xrkmm/ui-h5&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;add&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>add<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;bar&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>bar<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;big-add&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>big-add<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;big-close&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>big-close<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;big-right&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>big-right<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;big-select&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>big-select<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;check&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>check<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;checked&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>checked<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;clear&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>clear<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;collect&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>collect<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;collected&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>collected<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;comment&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>comment<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;comment2&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>comment2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;delete&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>delete<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;details&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>details<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;down&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>down<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;download&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>download<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;edit&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>edit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;fill-right&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>fill-right<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;fill-select&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>fill-select<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;filter&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>filter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;flows&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>flows<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;hide&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>hide<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;img&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>img<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;like&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>like<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;liked&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>liked<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;live&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>live<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;loading&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>loading<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;look&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>look<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;loop&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>loop<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;menu&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>menu<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;message&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>message<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;more-check&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>more-check<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;more&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>more<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;notice&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>notice<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;pause&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>pause<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;play&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>play<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;question&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>question<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>radio<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;radioto&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>radioto<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;random-play&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>random-play<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;random&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>random<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;refresh&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>refresh<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;remove&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>remove<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;right&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>right<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;search&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>search<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;select&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>select<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;service&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>service<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;set&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>set<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;share&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>share<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sort&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>sort<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;subscribe&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>subscribe<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;subscribed&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>subscribed<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;icon-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;video&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h5</span>&gt;</span>video<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h5</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo;\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.icon-box</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-flex;\n  <span class=\"hljs-attribute\">align-items</span>: center;\n  <span class=\"hljs-attribute\">justify-content</span>: center;\n  <span class=\"hljs-attribute\">flex-direction</span>: column;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100px</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100px</span>;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">8px</span>;\n  <span class=\"hljs-attribute\">transition</span>: all <span class=\"hljs-number\">0.5s</span>;\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">30px</span>;\n\n  &amp;<span class=\"hljs-selector-pseudo\">:hover</span> {\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(<span class=\"hljs-number\">1.1</span>);\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#ffe400</span>;\n  }\n}\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n\n        <div className=\"demo-box\">\n          <h3>直接使用Class类名</h3>\n\n          <div className=\"demo\">\n            <CLASS />\n            <Divider orientation=\"left\">描述</Divider>\n            <p>\n              你可以直接使用类名\n              <code>\n                <span className=\"hljs-attribute\">xIcon-xx</span>\n              </code>\n              图标的名称来使用icon图标\n            </p>\n\n            <div className=\"action-cell\">\n              <Tooltip title=\"复制代码\">\n                <CopyToClipboard\n                  text={`\nconst Demo: React.FC = () => {\n\n  return (\n    <i className=\"xrk-i-service\" style={{ fontSize: 40 }} />\n  )\n}\n\nexport default Demo\n`}\n                >\n                  <Button shape=\"circle\" icon={<CopyOutlined />} size=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"查看代码\">\n                <Button\n                  shape=\"circle\"\n                  icon={<CodeSandboxOutlined />}\n                  size=\"small\"\n                  onClick={() => _setCLASS(!_CLASS)}\n                />\n              </Tooltip>\n            </div>\n            {_CLASS && (\n              <div\n                className=\"code-box\"\n                dangerouslySetInnerHTML={{\n                  __html: `<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">const</span> Demo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;xrk-i-service&quot;</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">40</span> }} /&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Demo\n</code></pre>\n`,\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <br />\n      </div>\n      <h2>Props</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>必填</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>name</td>\n            <td>是</td>\n            <td>图标的名称</td>\n            <td>\n              <code>\n                <span className=\"hljs-built_in\">string</span>\n              </code>\n            </td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default Pgae\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import 'weui'\nimport React from 'react'\nimport classNames from 'classnames'\nimport './style/index.css'\n\ninterface IProps {\n  hoverClass?: string\n  className?: string\n  hoverStartTime?: number\n  hoverStayTime?: number\n  onTouchStart? (e: React.TouchEvent<HTMLDivElement>): void\n  onTouchEnd? (e: React.TouchEvent<HTMLDivElement>): void\n  onTouchMove? (e: React.TouchEvent<HTMLDivElement>): void\n  onLongPress? (): void\n}\n\ninterface IState {\n  hover: boolean\n  touch: boolean\n}\n\nclass View extends React.Component<IProps, IState> {\n  state = {\n    hover: false,\n    touch: false\n  }\n\n  timeoutEvent: NodeJS.Timeout;\n  startTime = 0;\n\n  render () {\n    const {\n      hoverClass,\n      onTouchStart,\n      onTouchEnd,\n      onTouchMove,\n      className,\n      hoverStartTime = 50,\n      hoverStayTime = 400,\n      ...other\n    } = this.props\n\n    const cls = classNames(\n      '',\n      {\n        [`${hoverClass}`]: this.state.hover\n      },\n      className\n    )\n\n    const _onTouchStart = e => {\n      if (hoverClass) {\n        this.setState(() => ({\n          touch: true\n        }))\n        setTimeout(() => {\n          if (this.state.touch) {\n            this.setState(() => ({\n              hover: true\n            }))\n          }\n        }, hoverStartTime)\n      }\n      onTouchStart && onTouchStart(e)\n      if (this.props.onLongPress) {\n        this.timeoutEvent = setTimeout(() => {\n          this.props.onLongPress!()\n        }, 350)\n        this.startTime = (new Date()).getTime()\n      }\n    }\n\n    const _onTouchMove = e => {\n      clearTimeout(this.timeoutEvent)\n      onTouchMove && onTouchMove(e)\n    }\n\n    const _onTouchEnd = e => {\n      const spanTime = (new Date().getTime()) - this.startTime\n      if (spanTime < 350) {\n        clearTimeout(this.timeoutEvent)\n      }\n      if (hoverClass) {\n        this.setState(() => ({\n          touch: false\n        }))\n        setTimeout(() => {\n          if (!this.state.touch) {\n            this.setState(() => ({\n              hover: false\n            }))\n          }\n        }, hoverStayTime)\n      }\n      onTouchEnd && onTouchEnd(e)\n    }\n\n    return (\n      <div\n        {...other}\n        className={cls}\n        onTouchStart={_onTouchStart}\n        onTouchEnd={_onTouchEnd}\n        onTouchMove={_onTouchMove}\n      >\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default View\n","export const PROTAL_ADD = 'XRKMM_PROTAL_ADD'\n\nexport const PROTAL_REMOVE = 'XRKMM_PROTAL_REMOVE'\n\nexport const TOAST_ADD = 'XRKMM_TAOST_ADD'\n","/* eslint-disable @typescript-eslint/no-explicit-any */\ntype CallBack = (...args: any[]) => void\n\ntype Destroy = () => void\n\nclass ProtalSub {\n  private listens = new Map<string, CallBack>()\n\n  add(type: string, cb: CallBack): Destroy {\n    this.listens.set(type, cb)\n\n    return (): void => {\n      this.listens.delete(type)\n    }\n  }\n\n  emit(type: string, ...args: any[]): void {\n    const callBack = this.listens.get(type)\n\n    if (!callBack) return\n\n    window.requestAnimationFrame(() => {\n      callBack(...args)\n    })\n  }\n}\n\nexport default new ProtalSub()\n","import 'weui'\nimport React from 'react'\nimport classNames from 'classnames'\nimport './style/index.css'\n\ninterface IProps {\n  className?: string\n  selectable?: boolean\n}\n\nclass Text extends React.Component<IProps, Record<string, unknown>> {\n  render () {\n    const { className, selectable = false, ...restProps } = this.props\n    const cls = classNames(\n      'taro-text',\n      {\n        'taro-text__selectable': selectable\n      },\n      className\n    )\n    return (\n      <span {...restProps} className={cls}>\n        {this.props.children}\n      </span>\n    )\n  }\n}\n\nexport default Text\n","import 'weui'\nimport React from 'react'\nimport classNames from 'classnames'\nimport './style/index.css'\n\n// require('intersection-observer')\n\ninterface IProps{\n  className?: string,\n  src: string,\n  style?: Record<string, string>,\n  mode: string,\n  onError: () => void,\n  onLoad: (e) => void,\n  lazyLoad?: boolean,\n  imgProps?: Record<string, any>,\n}\n\nclass Image extends React.Component<IProps> {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isLoaded: false\n    }\n    this.imageOnLoad = this.imageOnLoad.bind(this)\n    // this.observer = {}\n  }\n\n  observer: any = {}\n  imgRef: any = null\n\n  componentDidMount () {\n    if (this.props.lazyLoad && window.IntersectionObserver) {\n      this.observer = new IntersectionObserver((entries) => {\n        // 异步 api 关系\n        if (entries[entries.length - 1].isIntersecting) {\n          this.setState({ isLoaded: true }, () => {\n            // findDOMNode(this).children[0].src = this.props.src\n            this.imgRef.src = this.props.src\n          })\n        }\n      }, {\n        rootMargin: '300px 0px'\n      })\n      this.observer.observe(this.imgRef)\n    }\n  }\n\n  componentWillUnmount () {\n    this.observer.disconnect && this.observer.disconnect()\n  }\n\n  imageOnLoad (e) {\n    const { onLoad } = this.props\n    Object.defineProperty(e, 'detail', {\n      enumerable: true,\n      writable: true,\n      value: {\n        width: e.target.width,\n        height: e.target.height\n      }\n    })\n\n    onLoad && onLoad(e)\n  }\n\n  render () {\n    const {\n      className,\n      src,\n      style = {},\n      mode,\n      onError,\n      lazyLoad,\n      imgProps,\n      ...reset\n    } = this.props\n    const cls = classNames(\n      'taro-img',\n      {\n        'taro-img__widthfix': mode === 'widthFix'\n      },\n      className\n    )\n    const imgCls = classNames(\n      'taro-img__mode-' +\n        (mode || 'scaleToFill').toLowerCase().replace(/\\s/g, '')\n    )\n\n    return (\n      <div className={cls} style={style} {...reset}>\n        {lazyLoad ? (\n          <img\n            ref={img => (this.imgRef = img)}\n            className={imgCls}\n            data-src={src}\n            onLoad={this.imageOnLoad}\n            onError={onError}\n            {...imgProps}\n          />\n        ) : (\n          <img\n            ref={img => (this.imgRef = img)}\n            className={imgCls}\n            src={src}\n            onLoad={this.imageOnLoad}\n            onError={onError}\n            {...imgProps}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Image\n","/* eslint-disable no-magic-numbers */\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { Text, View, Image } from '@tarojs/components'\nimport { ToastProps } from './interface'\n\n\nexport const Toast: React.FC<ToastProps> = ({ title, onClose, success, icon, image, duration }) => {\n  const [ isHideAnimated, setIsHideAnimated ] = useState<0 | 1 | 2>(0)\n\n  const iconEl = useMemo((): JSX.Element | null => {\n    if (image) return <Image src={image} className=\"xrk-toast-icon\" mode=\"aspectFill\" />\n\n    switch(icon) {\n      case 'success':\n        return (\n          <Image\n            className=\"xrk-toast-icon\"\n            mode=\"aspectFill\"\n            src=\"https://assets.xrkmm.cn/u/4000002499670412/065dca5c-f5f5-4708-9acd-d1bd513dcb2b.png\"\n          />\n        )\n\n      default:\n        return null\n    }\n\n  }, [ icon, image ])\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const onAnimationEnd = (event: any): void => {\n    if (event.animationName === 'toastHide') {\n      setIsHideAnimated(2)\n      onClose?.()\n    }\n  }\n\n  useEffect(() => {\n    success?.()\n\n    setIsHideAnimated(0)\n    const timer = setTimeout(() => {\n      setIsHideAnimated(1)\n    }, duration)\n\n    return (): void => clearTimeout(timer)\n\n  }, [ duration, success ])\n\n  if (isHideAnimated === 2) return null\n\n  return (\n    <View className={`xrk-toast-item ${isHideAnimated ? 'hide' : 'show'}`} onAnimationEnd={onAnimationEnd} >\n      {iconEl}\n      <Text>{title}</Text>\n    </View>\n  )\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { View } from '@tarojs/components'\nimport { TOAST_ADD } from '../../config/event'\nimport Sub from '../../utils/sub'\nimport { ToastOption } from './interface'\nimport { Toast } from './toast.h5'\n\ninterface ContainerProps {\n  onShow?(): void\n  onClose?(): void\n}\n\nexport const Container: React.FC<ContainerProps> = ({ onClose, onShow }) => {\n  const [ toastList, setToastList ] = useState<ToastOption[]>([])\n  // eslint-disable-next-line no-magic-numbers\n  const hide = useRef<number>(0)\n\n  const isMask = toastList.find((item) => item.mask)\n\n  const onItemClose = useCallback((): void => {\n    hide.current += 1\n\n    if (hide.current === toastList.length) {\n      hide.current = 0\n      setToastList([])\n      onClose?.()\n    }\n  }, [ toastList.length, hide ])\n\n  useEffect(() => {\n    const remove = Sub.add(TOAST_ADD, (toast: ToastOption) => {\n      setToastList((s) => [ ...s, toast ])\n    })\n    onShow?.()\n\n    return remove\n  }, [])\n\n  return (\n    <View className={`xrk-toast ${isMask && 'xrk-toast-actions'}`}>\n      {toastList.map((item, key) => (\n        <Toast {...item} onClose={onItemClose} key={String(key)} />\n      ))}\n    </View>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport ProtalSub from '../../utils/sub'\nimport { PROTAL_ADD, PROTAL_REMOVE } from '../../config/event'\n\nconst Host: React.FC = () => {\n  const [ list, setList ] = useState<React.ReactNode[]>([])\n\n  useEffect(() => {\n    const ids = new Map<number, React.ReactNode>()\n\n    const setChildren = (): void => {\n      setList([ ...ids.values() ])\n    }\n\n    const removeAdd = ProtalSub.add(PROTAL_ADD, (id: number, child: React.ReactNode) => {\n      ids.set(id, child)\n      setChildren()\n    })\n\n    const removeRemove = ProtalSub.add(PROTAL_REMOVE, (id: number) => {\n      ids.delete(id)\n      setChildren()\n    })\n\n    return (): void => {\n      removeAdd?.()\n      removeRemove?.()\n      ids.clear()\n    }\n  }, [])\n\n  return (\n    <>\n      {list}\n    </>\n  )\n}\n\nexport default Host\n","/* eslint-disable no-magic-numbers */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Host from './host'\nimport ProtalSub from '../../utils/sub'\nimport { PROTAL_ADD, PROTAL_REMOVE } from '../../config/event'\n\nclass HostManager {\n  private initTime = 60\n  private id = 1\n  status = false\n\n  private async _init(): Promise<void> {\n    if (this.status) return Promise.resolve()\n\n    const root = document.createElement('div')\n    document.body.append(root)\n\n    return new Promise((res) => {\n      this.status = true\n      ReactDOM.render(<Host />, root)\n      setInterval(res, this.initTime)\n    })\n  }\n\n  async add(children: React.ReactNode): Promise<number> {\n    await this._init()\n    const id = this.id + 1\n    ProtalSub.emit(PROTAL_ADD, id, children)\n\n    return id\n  }\n\n  remove(id: number): void {\n    ProtalSub.emit(PROTAL_REMOVE, id)\n  }\n}\n\nexport default new HostManager\n","/* eslint-disable no-magic-numbers */\nimport React from 'react'\nimport { Container } from './container.h5'\nimport { DEFAULT_DURATION, ToastOption } from './interface'\nimport Protal from '../Portal'\nimport Sub from '../../utils/sub'\nimport { TOAST_ADD } from '../../config/event'\n\nconst SuoreID = { value: -1 }\nconst ID = new Proxy(SuoreID, {\n  set(target, prop, value): boolean {\n    if (prop === 'value' && value === -1) {\n      const oldId = target.value\n      Protal.remove(oldId)\n    }\n\n    return Reflect.set(target, prop, value)\n  }\n})\n\nclass ToastManager {\n\n  private async _init(): Promise<void> {\n    if (ID.value !== -1) return Promise.resolve()\n\n    // 因为是桢调用，所有需要延迟\n    return new Promise((res) => {\n      Protal.add(<Container key=\"toast\" onShow={res} onClose={(): void => this.hide()} />)\n        .then((id) => ID.value = id)\n    })\n  }\n\n  async show(option: ToastOption | string): Promise<void> {\n    await this._init()\n\n    const _options: ToastOption = typeof option === 'string' ? { title: option } : option\n\n    if (!_options.icon) _options.icon = 'none'\n    if (!_options.duration) _options.duration = DEFAULT_DURATION\n\n    try {\n      Sub.emit(TOAST_ADD, _options)\n\n    } catch (error) {\n      _options.fail?.()\n    }\n  }\n\n  /** 隐藏toast并且清除后续所有的taost消息队列 */\n  hide(): void {\n    ID.value = -1\n  }\n\n}\n\nexport default new ToastManager()\n","export const DEFAULT_DURATION = 2000\n\nexport interface ToastOption {\n  /** 提示的内容 */\n  title: string\n  /** 自定义图标的本地路径，image 的优先级高于 icon */\n  image?: string\n  /** 图标,可选 success, loading, none, 默认为 none */\n  icon?: 'success' | 'loading' | 'none'\n  /** 是否显示透明蒙层，防止触摸穿透, 默认 false */\n  mask?: boolean\n  /** 提示的延迟时间，默认 1500ms */\n  duration?: number\n  /** 接口调用成功的回调函数 */\n  success?(): void\n  /** 接口调用失败的回调函数 */\n  fail?(): void\n}\n\nexport interface ToastProps extends ToastOption {\n  onClose?(): void\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport { View } from '@tarojs/components'\n\ntype AnimateStatus = 'show' | 'hide' | 'over'\n\nexport interface DrawerProps {\n  /** 是否显示 */\n  visible: boolean\n  /** 弹出的方向，可以设置左右上下中间, 默认 bottom */\n  position?: 'left' | 'right' | 'bottom' | 'top' | 'center'\n  /** 是否显示遮罩层 */\n  mask?: boolean\n  /** 点击蒙层是否允许关闭 */\n  maskClosable?: boolean\n  /** 关闭回调 */\n  onClose?(): void\n  /** 完全隐藏回调 */\n  onHide?(): void\n}\n\nconst Drawer: React.FC<DrawerProps> = ({\n  visible,\n  position = 'bottom',\n  mask = true,\n  maskClosable = true,\n  onClose,\n  onHide,\n  children\n}) => {\n  const [ status, setStatus ] = useState<AnimateStatus>('over')\n  const _class = classNames('xrk-drawer-body', status, `xrk-drawer-${position}`)\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const onAnimationEnd = useCallback((event: any) => {\n    const animationName: string = event.animationName ||\n      event.detail?.animationName ||\n      event.nativeEvent?.animationName ||\n      event.target.className\n\n    // eslint-disable-next-line no-magic-numbers\n    if (animationName.toLocaleUpperCase().indexOf('HIDE') !== -1) setStatus('over')\n  }, [])\n\n  const onClickMask = (): void => {\n    if (maskClosable) onClose?.()\n  }\n\n  useEffect(() => {\n    if (visible === true && status !== 'show')\n      setStatus('show')\n\n    else if (visible === false && status === 'show')\n      setStatus('hide')\n\n  }, [ visible, status ])\n\n  if (visible === false && status === 'over') {\n    onHide?.()\n    return null\n  }\n\n  return (\n    <>\n      {mask && (\n        <View\n          className={`xrk-drawer-mask ${status}`}\n          data-testid=\"mask\"\n          onClick={onClickMask}\n        />\n      )}\n      <View className={_class} onAnimationEnd={onAnimationEnd} data-testid=\"body\" >\n        {children}\n      </View>\n    </>\n  )\n}\n\nexport default Drawer\n","import React from 'react'\nimport type { TextProps } from '@tarojs/components/types/Text'\n\n// #if _APP === 'weapp'\nimport { Text } from '@tarojs/components'\n// #endif\n\nexport interface IconProps extends TextProps {\n  name: string\n}\n\nconst Icon: React.FC<IconProps> = ({ name }) => {\n  // #if _APP === 'weapp'\n  return <Text className={`xrk-icon xrk-i-${name}`} />\n  // #else\n  return <i className={`xrk-icon xrk-i-${name}`} /> // eslint-disable-line no-unreachable, react/forbid-elements\n  // #endif\n}\n\nexport default Icon\n","import React from 'react'\nimport { View } from '@tarojs/components'\n\nexport interface ActionSheetItemProps {\n  align?: 'left' | 'center' | 'right'\n  text?: string\n  suffix?: React.ReactNode | string\n  onClick?(): void\n}\n\nexport const ActionSheetItem: React.FC<ActionSheetItemProps> = ({ text, align, onClick, suffix }) => {\n  return (\n    <View className=\"xrk-actionsheet-item\" onClick={onClick}>\n      <View className={`xrk-as-text xrk-actionsheet-${align}`}>\n        {text}\n      </View>\n      {suffix}\n    </View>\n  )\n}\n","import { View } from '@tarojs/components'\nimport classNames from 'classnames'\nimport React, { useMemo } from 'react'\nimport Drawer from '../Drawer'\nimport Icon from '../Icon'\nimport { ActionSheetItem } from './item'\n\n\nexport interface ActionSheetProps {\n  /** 是否显示 */\n  visible: boolean\n  /** 标题 */\n  title?: string\n  /** 副标题 */\n  subTitle?: string\n  /** 标题水平方向 */\n  titleAlign?: 'left' | 'center' | 'right'\n  /** 是否显示头部 */\n  showHead?: boolean\n  /** 是否显示关闭按钮 */\n  closable?: boolean\n  /** 是否显示底部关闭按钮 */\n  showCancel?: boolean\n  /** 取消按钮的文案 */\n  cancelText?: string\n  /** 是否显示底部确定按钮 */\n  showOk?: boolean\n  /** 确定按钮的文案 */\n  okText?: string\n  /** 点击蒙层是否允许关闭 */\n  maskClosable?: boolean\n  /** 取消或关闭回调 */\n  onClose?(): void\n  /** 点击确认按钮回调 */\n  onOk?(): void\n  onHide?(): void\n}\n\nconst ActionSheet: React.FC<ActionSheetProps> = ({\n  title,\n  subTitle,\n  titleAlign = 'left',\n  showHead = true,\n  maskClosable = true,\n  closable,\n  onClose,\n  showCancel,\n  cancelText = '关闭',\n  showOk,\n  okText = '确定',\n  onOk,\n  children,\n  ...props\n}) => {\n  const isShowFloor = showCancel || showOk\n  const titleClass = useMemo(() => classNames(\n    'xrk-actionsheet-header-center',\n    `xrk-actionsheet-${titleAlign}`\n  ), [ titleAlign ])\n\n\n  return (\n    <Drawer\n      {...props}\n      maskClosable={maskClosable}\n      onClose={onClose}\n      position=\"bottom\" mask\n    >\n      <View className=\"xrk-actionsheet\">\n        {showHead && (\n          <View className=\"xrk-actionsheet-header\">\n            <View className={titleClass}>\n              <View className=\"title\">{title}</View>\n              <View className=\"sub-title\">{subTitle}</View>\n            </View>\n            {closable && (\n              <View\n                className=\"xrk-actionsheet-close\"\n                data-testid=\"close\"\n                onClick={onClose}\n              >\n                <Icon name=\"delete\" />\n              </View>\n            )}\n          </View>\n        )}\n        {children}\n        {isShowFloor && (\n          <View className=\"xrk-actionsheet-floor\">\n            {showCancel && (<ActionSheetItem align={titleAlign} text={cancelText} onClick={onClose} />)}\n            {showOk && (<ActionSheetItem align={titleAlign} text={okText} onClick={onOk} />)}\n          </View>\n        )}\n      </View>\n    </Drawer>\n  )\n}\n\n\nexport default ActionSheet\n","import React, { useState } from 'react'\nimport ActionSheet from './actionSheet'\nimport { ActionSheetItem } from './item'\nimport Protal from '../Portal'\n\nexport interface SuccessCallbackResult {\n  tapIndex: number\n  errMsg: string\n}\n\nexport interface ShowActionSheetOption {\n  /** 选项数组，Taro端数组长度最大为 6，H5端不限制 */\n  list: string[]\n}\n\nexport type ShowActionSheet = (option: ShowActionSheetOption) => Promise<SuccessCallbackResult>\n\n\ninterface DomProps {\n  onClose(): void\n  onCancel(): void\n  onSuccess(index: number): void\n}\n\nconst Dom: React.FC<DomProps & ShowActionSheetOption> = ({ onClose, onSuccess, onCancel, list }) => {\n  const [ show, setShow ] = useState(true)\n\n  const _onClose = (): void => {\n    setShow(false)\n    onCancel()\n  }\n\n  const _onSuccess = (index: number): void => {\n    setShow(false)\n    onSuccess(index)\n  }\n\n  return (\n    <ActionSheet\n      showCancel\n      showHead={false}\n      visible={show}\n      onClose={_onClose}\n      onHide={onClose}\n    >\n      {list.map((item, key) => (\n        <ActionSheetItem key={item} text={item} onClick={(): void => _onSuccess(key)} />\n      ))}\n    </ActionSheet>\n  )\n}\n\nconst showActionSheet: ShowActionSheet = async (option) => {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise( async (res, rej) => {\n    let id: number\n\n    const remove = (): void => Protal.remove(id)\n\n    const cancel = (): void => rej({ tapIndex: -1, errMsg: '用户取消' })\n\n    const success = (index: number): void => {\n      res({\n        /** 用户点击的按钮序号，从上到下的顺序，从0开始 */\n        tapIndex: index,\n        /** 调用结果 */\n        errMsg: 'ok'\n      })\n    }\n\n    try {\n      id = await Protal.add(\n        <Dom\n          {...option}\n          key=\"as\"\n          onClose={remove}\n          onSuccess={success}\n          onCancel={cancel}\n        />\n      )\n\n    } catch (error) {\n      rej({ tapIndex: -1, errMsg: error.message })\n    }\n  })\n\n}\n\nexport default showActionSheet\n","import React from 'react'\nimport { View } from '@tarojs/components'\nimport Drawer, { DrawerProps } from '../Drawer'\n\nconst MULTI_NUM = 3\n\nexport type ModalButton = {\n  /** 按钮文字 */\n  text: string | React.ReactNode\n  /** 按钮风格, 默认 success */\n  style?: 'cancel' | 'success'\n  /** 按钮点击事件 */\n  onClick?(): void\n}\n\nexport interface ModalProps extends DrawerProps {\n  /** 提示的标题 */\n  title?: string | React.ReactNode\n  /** 提示的内容 */\n  content?: string | React.ReactNode\n  /** 弹出按钮列表 */\n  button: Array<ModalButton>\n  /** 点击按钮事件 */\n  onButtonClick?(index: number): void\n}\n\nconst Modal: React.FC<ModalProps> = ({\n  children,\n  content,\n  title,\n  button,\n  onButtonClick,\n  ...props\n}) => {\n  const _centent = children || content\n  const floorClass = button.length >= MULTI_NUM ? 'xrk-modal-floor-multi' : 'xrk-modal-floor-line'\n\n  return (\n    <Drawer\n      {...props}\n      position=\"center\"\n    >\n      <View className=\"xrk-modal\" data-testid=\"modal\" >\n        <View className=\"xrk-modal-top\">\n          <View className=\"xrk-modal-title\">\n            {title}\n          </View>\n          {Boolean(_centent) && (\n            <View className=\"xrk-modal-content\">\n              {_centent}\n            </View>\n          )}\n\n        </View>\n        {/* 按钮 */}\n        <View className={floorClass}>\n          {button.map((item, key) => (\n            <View\n              className={`xrk-modal-button ${item.style}`}\n              key={String(key)}\n              onClick={(): void => {\n                onButtonClick?.(key)\n                item.onClick?.()\n              }}\n            >\n              {item.text}\n            </View>\n          ))}\n        </View>\n      </View>\n    </Drawer>\n  )\n}\n\nexport default Modal\n","/* eslint-disable no-magic-numbers */\nimport  React, { useState } from 'react'\nimport Modal, { ModalButton } from './modal'\nimport Protal from '../Portal'\n\nexport interface ModalOption {\n  /** 提示的标题 */\n  title?: string\n  /** 取消按钮的文字，最多 4 个字符 */\n  cancelText?: string\n  /** 确认按钮的文字，最多 4 个字符 */\n  confirmText?: string\n  /** 是否显示取消按钮 */\n  showCancel?: boolean\n  /** 提示的内容 */\n  content?: string\n}\n\nexport interface SuccessCallbackResult {\n  /** 为 true 时，表示用户点击了取消（用于 Android 系统区分点击蒙层关闭还是点击取消按钮关闭） */\n  cancel: boolean\n  /** 为 true 时，表示用户点击了确定按钮 */\n  confirm: boolean\n  /** 调用结果 */\n  errMsg: string\n}\n\ninterface DomProps extends ModalOption {\n  onClick(SuccessCallbackResult): void\n  onHide(): void\n}\n\nconst Dom: React.FC<DomProps> = ({\n  title,\n  cancelText = '取消',\n  confirmText = '确定',\n  showCancel,\n  content,\n  onClick,\n  onHide\n}) => {\n  const [ show, setShow ] = useState(true)\n  const button: ModalButton[] = [\n    { text: confirmText, style: 'success' },\n  ]\n\n  if (showCancel) button.push({ text: cancelText, style: 'cancel' })\n\n  const onButtonClick = (index: number): void => {\n    setShow(false)\n    onClick?.({\n      confirm: index === 0,\n      cancel: index === 1,\n      errMsg: 'ok'\n    })\n  }\n\n\n  return (\n    <Modal\n      title={title}\n      content={content}\n      visible={show}\n      onButtonClick={onButtonClick}\n      button={button}\n      onHide={onHide}\n    />\n  )\n}\n\nconst showModal = async (option: ModalOption): Promise<SuccessCallbackResult> => {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (res, rej) => {\n    let id: number\n\n    const remove = (): void => {\n      Protal.remove(id)\n    }\n\n    try {\n      id = await Protal.add(<Dom {...option} onHide={remove} onClick={res} />)\n    } catch (error) {\n      rej({ errMsg: error.message } as SuccessCallbackResult)\n    }\n  })\n}\n\nexport default showModal\n","/**\n * px单位转rem\n * @param {*} val\n * @returns\n */\nconst designWidth = 75\nconst remLen = 2\n\n// eslint-disable-next-line no-magic-numbers\nexport function transformRem(val = 0): string {\n  if (!val) return ''\n  if (typeof val !== 'number') val = Number(val)\n\n  return parseFloat((val / designWidth).toFixed(remLen)) + 'rem'\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport { View, Image, Text } from '@tarojs/components'\nimport { transformRem } from '../../utils'\n\nconst PRESENTED_IMAGE_DEFAULT = 'https://assets.xrkmm.cn/u/4000002499670412/fec0810a-501e-4875-9a7e-0e152681ae21.png'\nconst PRESENTED_IMAGE_SIMPLE = 'https://assets.xrkmm.cn/u/4000002499670412/1b3b6895-9a51-4e4c-a4fd-b3878dbe987e.png'\nconst PRESENTED_IMAGE_HAPPY = 'https://assets.xrkmm.cn/u/4000002499670412/8bc1ba9b-b71d-4b77-bc86-1fd2a2f7b026.png'\nconst PRESENTED_IMAGE_ERROR = 'https://assets.xrkmm.cn/u/4000002499670412/99bc2c9f-eba2-4295-8de4-3d8f52862cf6.png'\n\nexport interface EmptyProps {\n  src?: string\n  size?: 'large' | 'middle' | 'small'\n  text?: string\n  wrapperTop?: number | string\n  wrapperBottom?: number | string\n}\n\ntype EmptyComponents = React.FC<EmptyProps> & {\n  PRESENTED_IMAGE_DEFAULT: string;\n  PRESENTED_IMAGE_SIMPLE: string;\n  PRESENTED_IMAGE_HAPPY: string;\n  PRESENTED_IMAGE_ERROR: string\n}\n\nconst Empty: EmptyComponents = ({\n  src = PRESENTED_IMAGE_DEFAULT,\n  size = 'middle',\n  text,\n  wrapperTop,\n  wrapperBottom,\n  children\n}) => {\n  const _class = classNames('xrk-empty', `xrk-empty-${size}`)\n\n  const _style: React.CSSProperties = {\n    paddingTop: typeof wrapperTop === 'string' ? wrapperTop : transformRem(wrapperTop),\n    paddingBottom: typeof wrapperBottom === 'string' ? wrapperBottom : transformRem(wrapperBottom)\n  }\n\n  return (\n    <View className={_class} style={_style} data-testid=\"empty\" >\n      <View>\n        <Image src={src} className=\"xrk-empty-img\" mode=\"aspectFit\" />\n      </View>\n      {Boolean(text) && (\n        <Text className=\"xrk-empty-text\">{text}</Text>\n      )}\n      {Boolean(children) && (\n        <View className=\"xrk-empty-children\">{children}</View>\n      )}\n    </View>\n  )\n}\n\nEmpty.PRESENTED_IMAGE_DEFAULT = PRESENTED_IMAGE_DEFAULT\nEmpty.PRESENTED_IMAGE_SIMPLE = PRESENTED_IMAGE_SIMPLE\nEmpty.PRESENTED_IMAGE_HAPPY = PRESENTED_IMAGE_HAPPY\nEmpty.PRESENTED_IMAGE_ERROR = PRESENTED_IMAGE_ERROR\n\nexport default Empty\n","import React, { useMemo } from 'react'\nimport ClassNames from 'classnames'\nimport { View } from '@tarojs/components'\n\nexport interface ButtonProps {\n  /** 按钮大小，max: 最大， big: 超大，large：大，middle：中，small：小，mini */\n  size?: 'max' | 'big' | 'large' | 'middle' | 'small' | 'mini'\n  /** 按钮风格类型 */\n  type?: 'primary' | 'warn' | 'error' | 'link' | 'pop'\n  /** 图标 */\n  icon?: React.ReactNode\n  /** 将按钮宽度调整为其父宽度的选项\t */\n  block?: boolean\n  /** 镂空风格 */\n  ghost?: boolean\n  /** 是否禁用 */\n  disabled?: boolean\n  /** 点击跳转的地址，指定此属性 button 的行为和 Link 链接一致, 后期补充\t */\n  // href?: string\n  /** 点击跳转事件 */\n  onClick?(): void\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  size = 'middle',\n  type = 'primary',\n  block,\n  ghost,\n  disabled,\n  onClick,\n  icon,\n  children\n}) => {\n  const isIcon = icon !== undefined\n  const isChildren = children !== undefined\n\n  const _class = useMemo(() => {\n    return ClassNames(\n      'xrk-btn',\n      'xrk-if xrk-ac xrk-jc',\n      `xrk-btn-${size}`,\n      `xrk-btn-${type}`,\n      {\n        'xrk-btn-block': block,\n        'xrk-btn-ghost': ghost,\n        'xrk-btn-icon': isIcon && !isChildren,\n        'xrk-btn-child-icon': isIcon && isChildren,\n        'xrk-btn-disabled':disabled\n      }\n    )\n  }, [ size, type, block, ghost, disabled, isIcon, isChildren ])\n\n  const _onClick = (): void => {\n    if (disabled) return\n\n    onClick?.()\n  }\n\n  return (\n    <View className={_class} onClick={_onClick} >\n      {children}\n      {icon}\n    </View>\n  )\n}\n\nexport default Button\n","const Page: React.FC = () => {\n  return (\n    <div\n      className=\"scope-page\"\n      dangerouslySetInnerHTML={{\n        __html: `<h1>参与代码贡献说明</h1>\n<h2>⌨️ 本地开发</h2>\n<p>1.clone 项目</p>\n<p>开发模式</p>\n<pre><code class=\"hljs language-bash\"> yarn dev\n</code></pre>\n<p>纯h5开发模式</p>\n<pre><code class=\"hljs language-bash\">yarn dev:h5\n</code></pre>\n<p>纯Taro开发模式</p>\n<pre><code class=\"hljs language-bash\">yarn dev:taro\n</code></pre>\n<p>文档开发模式</p>\n<pre><code class=\"hljs language-bash\">yarn dev:doc\n</code></pre>\n<p>编译结果</p>\n<pre><code class=\"hljs language-bash\">yarn buidl:all\n</code></pre>\n<h2>📁 项目结构说明</h2>\n<pre><code class=\"hljs\">xrkmm-cli\n├── build\n├── <span class=\"hljs-built_in\">example</span>\n├── <span class=\"hljs-built_in\">example</span>-react\n└── src\n    ├── assets\n    ├── <span class=\"hljs-built_in\">components</span>\n    |     └── <span class=\"hljs-built_in\">demo</span>\n    ├── config\n    ├── styles\n    └── utils\n</code></pre>\n<ul>\n<li>\n<p><code><span class=\"hljs-attribute\">build</span></code> 编译配置文件，rollup的编译h5端,小程序端,css端的配置文件</p>\n</li>\n<li>\n<p><code><span class=\"hljs-attribute\">exapmple-weapp</span></code> 小程序demo，用于实时调试自己编写组件效果</p>\n</li>\n<li>\n<p><code><span class=\"hljs-attribute\">exapmple-react</span></code> 浏览器端demo，用于实时调试编写端组件浏览器效果，是否与小程序端保持一致。</p>\n</li>\n<li>\n<p><code><span class=\"hljs-attribute\">src</span></code> 组件源码</p>\n</li>\n<li>\n<p><code><span class=\"hljs-attribute\">src</span>/assets</code> 静态资源文件夹，组件的媒体组件存放初。注意：组件引用的媒体资源应该尽量使用css引入使用。</p>\n</li>\n<li>\n<p><code><span class=\"hljs-attribute\">src</span>/components</code> 组件源码，注意此处只能存放js源码，scss样式文件应该在<code><span class=\"hljs-attribute\">styles</span></code>中</p>\n</li>\n<li>\n<p><code>src<span class=\"hljs-regexp\">/components/</span>demo</code> 组件的使用说明文件，markdown语法。用于生成在线文档。</p>\n</li>\n<li>\n<p><code>src/config</code> 配置</p>\n</li>\n<li>\n<p><code><span class=\"hljs-attribute\">src</span>/styles</code> 组件样式文件，为了方便外部主题的修改和css按需使用。所有的组件样式都是存放在此</p>\n</li>\n<li>\n<p><code><span class=\"hljs-attribute\">src</span>/utils</code> 工具模块</p>\n</li>\n</ul>\n<h2>📖 组件开发规范</h2>\n<ul>\n<li>每个文件中只能存在一个组件（包括状态和无状态）</li>\n<li>组件目录必须存在<code><span class=\"hljs-attribute\">demo</span></code>文件夹，存放组件使用说明的<code><span class=\"hljs-built_in\">md</span></code>文件。<a href=\"/md\">组件md文件编写规范</a></li>\n</ul>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-comment\">// 组件目录说明</span>\nCard\n├── demo\n      ├── props.md <span class=\"hljs-comment\">// 组件属性说明文件</span>\n      └── basis.md <span class=\"hljs-comment\">// 组件演示离职文件</span>\n├── index.tsx\n</code></pre>\n<h2>🔨 使用条件编译代码</h2>\n<pre><code class=\"hljs language-js\">  <span class=\"hljs-comment\">// #if _APP === &#x27;weapp&#x27;</span>\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;我是taro环境&#x27;</span>)\n  <span class=\"hljs-comment\">// #else</span>\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;我是纯h5环境&#x27;</span>)\n  <span class=\"hljs-comment\">// #endif</span>\n</code></pre>\n<h2>PR标准</h2>\n<ul>\n<li>🚗 单元测试覆盖率必须 100%</li>\n<li>🕹 必须满足<code><span class=\"hljs-attribute\">eslint</span></code>，<code><span class=\"hljs-attribute\">stylelint</span></code>检测</li>\n<li>🏍 所有组件必须存在<code><span class=\"hljs-built_in\">md</span>使用说明文件</code>和<code><span class=\"hljs-attribute\">props</span></code>注释说明。因为后续我们将生成在线文档站点</li>\n</ul>\n`,\n      }}\n    />\n  )\n}\n\nexport default Page\n","const Page: React.FC = () => {\n  return (\n    <div\n      className=\"scope-page\"\n      dangerouslySetInnerHTML={{\n        __html: `<h1>组件md文件编写规范</h1>\n<h3>命名规范</h3>\n<p>必须是英文开头，小驼峰。使用markdown语法</p>\n<h3>系统命名</h3>\n<ul>\n<li><a href=\"http://props.md\">props.md</a> 组件的属性说明文件，如果组件存在演示例子，<a href=\"http://props.md\">props.md</a> 内容中需要使用 <code><span class=\"hljs-section\">&lt;demo/&gt;</span></code>插入演示内容。</li>\n</ul>\n<h3>例子</h3>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-comment\">// 目录</span>\ndemo\n├── props.md <span class=\"hljs-comment\">// 组件属性说明文件</span>\n└── basis.md <span class=\"hljs-comment\">// 组件演示离职文件</span>\n</code></pre>\n<p><a href=\"http://props.md\">props.md</a></p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\"># 测试卡片组件 Card</span>\n// 注意：props.md 第一个标题将用于文档菜单名称\n\n<span class=\"hljs-variable\">&lt;demo&gt;</span>\n// 注意：<span class=\"hljs-variable\">&lt;demo&gt;</span>用来插入演示组件例子代码\n\n<span class=\"hljs-comment\">## Props</span>\n|<span class=\"hljs-string\"> 属性 </span>|<span class=\"hljs-string\"> 说明 </span>|<span class=\"hljs-string\"> 类型 </span>|<span class=\"hljs-string\"> 默认值\n</span>|<span class=\"hljs-string\"> --- </span>|<span class=\"hljs-string\"> --- </span>|<span class=\"hljs-string\"> --- </span>|<span class=\"hljs-string\"> --- </span>|\n|<span class=\"hljs-string\"> title</span>|<span class=\"hljs-string\"> 标题 </span>|<span class=\"hljs-string\"> \\`string\\` </span>|<span class=\"hljs-string\"> </span>|\n\n\n<span class=\"hljs-comment\"># Event</span>\n|<span class=\"hljs-string\"> 属性 </span>|<span class=\"hljs-string\"> 说明 </span>|<span class=\"hljs-string\"> 类型 </span>|<span class=\"hljs-string\"> 默认值 </span>|\n|<span class=\"hljs-string\"> --- </span>|<span class=\"hljs-string\"> --- </span>|<span class=\"hljs-string\"> --- </span>|<span class=\"hljs-string\"> --- </span>|\n|<span class=\"hljs-string\"> onClick </span>|<span class=\"hljs-string\"> 点击事件 </span>|<span class=\"hljs-string\"> null </span>|<span class=\"hljs-string\"> </span>|\n\n</code></pre>\n<p><a href=\"http://basis.md\">basis.md</a></p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\">## 基本用法</span>\n\n\\\\\\`\\`\\`<span class=\"javascript\">tsx\n<span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { Card } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@xrkmm/ui&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> CardDemo: React.FC = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [title, setTitle] = useState(<span class=\"hljs-string\">&#x27;我是卡片&#x27;</span>)\n\n  <span class=\"hljs-keyword\">const</span> onClick = <span class=\"hljs-function\">() =&gt;</span> {\n    setTitle(<span class=\"hljs-string\">&#x27;我是卡片&#x27;</span> + <span class=\"hljs-built_in\">Date</span>.now())\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Card</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">{title}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onClick}</span> /&gt;</span></span>\n  )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> CardDemo\n\\\\</span>\\`\\`\\`\n\n这是一个普通的卡片，具有标题和点击事件\n</code></pre>\n<h3>生成文档预览</h3>\n<img style=\"width:100%\" src=\"https://assets.xrkmm.cn/u/4000002499670412/bbbe7e74-8a6d-4348-a742-cf26559999b2.png\">\n`,\n      }}\n    />\n  )\n}\n\nexport default Page\n","const Page: React.FC = () => {\n  return (\n    <div\n      className=\"scope-page\"\n      dangerouslySetInnerHTML={{\n        __html: `<h1>0.0.5-alpha2</h1>\n<ul>\n<li>添加 <code><span class=\"hljs-selector-tag\">Button</span></code></li>\n<li>添加 <code><span class=\"hljs-attribute\">Actionsheet</span></code></li>\n<li>添加 <code><span class=\"hljs-attribute\">Drawer</span></code></li>\n<li>添加 <code><span class=\"hljs-attribute\">Toast</span></code></li>\n<li>优化构建，支持webpack自动化esm构建引入。优化依赖树，实现按需编译组件</li>\n</ul>\n<h1>0.0.6</h1>\n<ul>\n<li>添加 <code><span class=\"hljs-attribute\">Modal</span></code></li>\n</ul>\n<h1>0.0.8</h1>\n<ul>\n<li>添加 <code><span class=\"hljs-attribute\">Icon</span></code></li>\n</ul>\n<h1>0.0.9</h1>\n<ul>\n<li>添加 <code><span class=\"hljs-attribute\">Empty</span></code></li>\n</ul>\n`,\n      }}\n    />\n  )\n}\n\nexport default Page\n"],"sourceRoot":""}